<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.choerodon.agile.infra.mapper.StoryMapMapper">

    <select id="selectEpicIdsByProgram" resultType="java.lang.Long">
        select ai.issue_id
        from agile_issue ai
        where ai.program_id = #{programId}
        and ai.type_code = 'issue_epic'
        order by ai.issue_id desc
    </select>

    <select id="selectEpicIdsByProject" resultType="java.lang.Long">
        select ai.issue_id
        from agile_issue ai
        where ai.project_id = #{projectId}
        and ai.type_code = 'issue_epic'
        order by ai.issue_id desc
    </select>

    <resultMap id="epicWithFeatureListMap" type="io.choerodon.agile.infra.dataobject.EpicWithFeatureDO">
        <id column="ai_issue_id" property="issueId"/>
        <id column="ai_issue_num" property="issueNum"/>
        <id column="ai_type_code" property="typeCode"/>
        <id column="ai_summary" property="summary"/>
        <id column="ai_epic_name" property="epicName"/>
        <id column="ai_program_id" property="programId"/>
        <id column="ar_rank" property="epicRank"/>
        <id column="ar_object_version_number" property="epicRankObjectVersionNumber"/>
        <collection property="featureCommonDOList" autoMapping="true" ofType="io.choerodon.agile.infra.dataobject.FeatureCommonDO">
            <id property="issueId" column="feature_issue_id"/>
            <id property="issueNum" column="feature_issue_num"/>
            <id property="typeCode" column="feature_type_code"/>
            <id property="summary" column="feature_summary"/>
            <id property="featureType" column="feature_feature_type"/>
            <id property="programId" column="feature_program_id"/>
            <id property="featureRank" column="ar2_rank"/>
            <id property="featureRankObjectVersionNumber" column="ar2_object_version_number"/>
        </collection>
    </resultMap>

    <select id="selectEpicWithFeatureList" resultMap="epicWithFeatureListMap">
        select
            ai.issue_id as ai_issue_id,
            IF(ai.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai.issue_num)) as ai_issue_num,
            ai.type_code as ai_type_code,
            ai.summary as ai_summary,
            ai.epic_name as ai_epic_name,
            ai.program_id as ai_program_id,
            ar.rank as ar_rank,
            ar.object_version_number as ar_object_version_number,
            feature_info.issue_id as feature_issue_id,
            feature_info.issue_num as feature_issue_num,
            feature_info.type_code as feature_type_code,
            feature_info.summary as feature_summary,
            feature_info.feature_type as feature_feature_type,
            feature_info.program_id as feature_program_id,
            feature_info.rank as ar2_rank,
            feature_info.object_version_number as ar2_object_version_number
        from agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        left join agile_rank ar on ar.project_id = #{projectId} and ai.issue_id = ar.issue_id and ar.type = 'epic'
        left join
            (select
              ai2.issue_id,
              IF(ai2.issue_num IS NULL, NULL, CONCAT_WS('-', api2.project_code, ai2.issue_num)) as issue_num,
              ai2.type_code,
              ai2.summary,
              ai2.epic_id,
              ai2.program_id,
              af.feature_type,
              ar2.rank,
              ar2.object_version_number
             from agile_issue ai2
             left join agile_rank ar2 on ar2.project_id = #{projectId} and ai2.issue_id = ar2.issue_id and ar2.type = 'feature'
             , agile_feature af, agile_project_info api2
             where ai2.type_code in ('feature') and ai2.issue_id = af.issue_id and ai2.project_id = api2.project_id and ai2.epic_id in
             <foreach collection="epicIds" item="epicId" open="(" separator=","
                     close=")">
                #{epicId}
             </foreach>
            ) feature_info on feature_info.epic_id = ai.issue_id
        where ai.issue_id in
        <foreach collection="epicIds" item="epicId" open="(" separator=","
                 close=")">
            #{epicId}
        </foreach>
        order by ai.issue_id desc, feature_info.issue_id desc
    </select>

    <select id="selectFeatureByNoEpicByProject" resultType="io.choerodon.agile.infra.dataobject.FeatureCommonDO">
        select
          ai.issue_id,
          IF(ai.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai.issue_num)) as issue_num,
          ai.type_code,
          ai.summary,
          af.feature_type,
          ar.rank as feature_rank,
          ar.object_version_number as feature_rank_object_version_number
        from agile_issue ai
        left join agile_rank ar on ar.project_id = #{projectId} and ai.issue_id = ar.issue_id and ar.type = 'feature'
        , agile_project_info api, agile_feature af
        where ai.type_code = 'feature'
        and ai.project_id = api.project_id
        and ai.project_id = #{projectId}
        and (ai.epic_id is null or ai.epic_id = 0)
        and ai.issue_id = af.issue_id
        order by ai.issue_id desc
    </select>

    <select id="selectFeatureByNoEpicByProgram" resultType="io.choerodon.agile.infra.dataobject.FeatureCommonDO">
        select
          ai.issue_id,
          IF(ai.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai.issue_num)) as issue_num,
          ai.type_code,
          ai.summary,
          ai.program_id,
          af.feature_type,
          ar.rank as feature_rank,
          ar.object_version_number as feature_rank_object_version_number
        from agile_issue ai
        left join agile_rank ar on ar.project_id = #{projectId} and ai.issue_id = ar.issue_id and ar.type = 'feature'
        , agile_project_info api, agile_feature af
        where ai.type_code = 'feature'
        and ai.program_id = api.project_id
        and ai.program_id = #{programId}
        and (ai.epic_id is null or ai.epic_id = 0)
        and ai.issue_id = af.issue_id
    </select>

    <resultMap id="storyListMap" type="io.choerodon.agile.infra.dataobject.StoryMapStoryDO">
        <id column="ai_issue_id" property="issueId"/>
        <id column="ai_issue_num" property="issueNum"/>
        <id column="ai_summary" property="summary"/>
        <id column="ai_epic_id" property="epicId"/>
        <id column="ai_feature_id" property="featureId"/>
        <id column="ai_issue_type_id" property="issueTypeId"/>
        <id column="ai_status_id" property="statusId"/>
        <id column="ai_completed" property="completed"/>
        <collection property="storyMapVersionDOList" autoMapping="true" ofType="io.choerodon.agile.infra.dataobject.StoryMapVersionDO">
            <id property="versionId" column="version_version_id"/>
            <id property="name" column="version_name"/>
        </collection>
    </resultMap>

    <select id="selectStoryList" resultMap="storyListMap">
        select
        ai.issue_id as ai_issue_id,
        IF(ai.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai.issue_num)) as ai_issue_num,
        ai.summary as ai_summary,
        ai.epic_id as ai_epic_id,
        ai.feature_id as ai_feature_id,
        version_info.version_id as version_version_id,
        version_info.name as version_name
        from agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        left join (
            select avir.issue_id, apv.version_id, apv.name
            from agile_version_issue_rel avir, agile_product_version apv
            where avir.version_id = apv.version_id and avir.project_id = #{projectId}
        ) version_info on ai.issue_id = version_info.issue_id
        where ai.project_id = #{projectId} and ai.type_code = 'story'
        and (
           <if test="epicIds != null and epicIds.size > 0">
               ai.epic_id in
               <foreach collection="epicIds" item="epicId" open="(" separator=","
                        close=")">
                   #{epicId}
               </foreach>
           </if>
           <if test="featureIds != null and featureIds.size > 0">
               <if test="epicIds != null and epicIds.size > 0">
                    OR
               </if>
               ai.feature_id in
               <foreach collection="featureIds" item="featureId" open="(" separator=","
                        close=")">
                   #{featureId}
               </foreach>
           </if>
        )
        <if test='searchDTO.advancedSearchArgs.versionList != null and searchDTO.advancedSearchArgs.versionList.size > 0'>
            and ai.issue_id in (
                 select avir2.issue_id
                 from agile_version_issue_rel avir2
                 where avir2.version_id in
                 <foreach collection="searchDTO.advancedSearchArgs.versionList" item="versionId" open="(" separator=","
                         close=")">
                     #{versionId}
                 </foreach>
            )
        </if>
        <if test='searchDTO.advancedSearchArgs.statusList != null and searchDTO.advancedSearchArgs.statusList.size > 0'>
            and ai.status_id in
            <foreach collection="searchDTO.advancedSearchArgs.statusList" item="statusId" open="(" separator=","
                     close=")">
                #{statusId}
            </foreach>
        </if>
        order by ai.issue_id
    </select>

    <select id="selectDemandStoryList" resultMap="storyListMap">
        select
        ai.issue_id as ai_issue_id,
        IF(ai.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai.issue_num)) as ai_issue_num,
        ai.summary as ai_summary,
        ai.issue_type_id as ai_issue_type_id,
        ai.status_id as ai_status_id,
        ais.is_completed AS ai_completed,
        version_info.version_id as version_version_id,
        version_info.name as version_name
        from agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_issue_status ais ON ai.status_id = ais.status_id and ais.project_id = #{projectId}
        left join (
            select avir.issue_id, apv.version_id, apv.name
            from agile_version_issue_rel avir, agile_product_version apv
            where avir.version_id = apv.version_id and avir.project_id = #{projectId}
        ) version_info on ai.issue_id = version_info.issue_id
        where ai.project_id = #{projectId} and ai.type_code = 'story'
        and (ai.epic_id is null or ai.epic_id = 0)
        and (ai.feature_id is null or ai.feature_id = 0)
        <if test="searchDTO.searchArgs != null">
            <if test='searchDTO.searchArgs.assigneeId != null and searchDTO.searchArgs.assigneeId != "" '>
                AND ai.assignee_id = #{searchDTO.searchArgs.assigneeId}
            </if>
        </if>
        <if test='searchDTO.advancedSearchArgs.versionList != null and searchDTO.advancedSearchArgs.versionList.size > 0'>
            and ai.issue_id in (
            select avir2.issue_id
            from agile_version_issue_rel avir2
            where avir2.version_id in
            <foreach collection="searchDTO.advancedSearchArgs.versionList" item="versionId" open="(" separator=","
                     close=")">
                #{versionId}
            </foreach>
            )
        </if>
        <if test='searchDTO.advancedSearchArgs.statusList != null and searchDTO.advancedSearchArgs.statusList.size > 0'>
            and ai.status_id in
            <foreach collection="searchDTO.advancedSearchArgs.statusList" item="statusId" open="(" separator=","
                     close=")">
                #{statusId}
            </foreach>
        </if>
        order by ai.issue_id desc
    </select>

</mapper>