<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.choerodon.agile.infra.mapper.PiMapper">

    <select id="hasPiIssue" resultType="java.lang.Boolean">
        select CASE COUNT(1) WHEN 0 THEN FALSE ELSE TRUE END
        from agile_issue ai
        where ai.program_id = #{programId} AND ai.type_code = 'feature' and ai.apply_type = 'program'
        and ai.issue_id
        <choose>
            <when test="piId != null and piId != 0">
                in (SELECT
                    apf.issue_id
                    FROM
                    agile_pi_feature apf,
                    agile_pi ap
                    WHERE
                    apf.program_id = #{programId}
                    AND apf.pi_id = ap.id
                    AND ap.status_code != 'done'
                    AND apf.pi_id = #{piId})
            </when>
            <otherwise>
                not in (SELECT
                    apf.issue_id
                    FROM
                    agile_pi_feature apf,
                    agile_pi ap
                    WHERE
                    apf.program_id = #{programId}
                    AND apf.pi_id = ap.id
                    AND ap.status_code != 'done' )
            </otherwise>
        </choose>
    </select>

    <select id="queryPiMaxRank" resultType="java.lang.String">
        select MAX(ai.rank) from agile_issue ai
        where ai.program_id = #{programId} AND ai.type_code = 'feature' and ai.apply_type = 'program'
        and ai.issue_id
        <choose>
            <when test="piId != null and piId != 0">
                in (SELECT
                apf.issue_id
                FROM
                agile_pi_feature apf,
                agile_pi ap
                WHERE
                apf.program_id = #{programId}
                AND apf.pi_id = ap.id
                AND ap.status_code != 'done'
                AND apf.pi_id = #{piId})
            </when>
            <otherwise>
                not in (SELECT
                apf.issue_id
                FROM
                agile_pi_feature apf,
                agile_pi ap
                WHERE
                apf.program_id = #{programId}
                AND apf.pi_id = ap.id
                AND ap.status_code != 'done' )
            </otherwise>
        </choose>
    </select>

    <resultMap id="programPiMap" type="io.choerodon.agile.infra.dataobject.PiWithFeatureDTO">
        <id property="id" column="pi_id"/>
        <id property="name" column="pi_name"/>
        <id property="statusCode" column="pi_status_code"/>
        <id property="startDate" column="pi_start_date"/>
        <id property="endDate" column="pi_end_date"/>
        <id property="artId" column="pi_art_id"/>
        <id property="objectVersionNumber" column="pi_object_version_number"/>
        <collection property="subFeatureDTOList" autoMapping="true" columnPrefix="ai_"
                    ofType="io.choerodon.agile.infra.dataobject.SubFeatureDTO"/>
    </resultMap>

    <select id="selectBacklogPiList" resultMap="programPiMap">
        SELECT
            ap.id as pi_id,
            CONCAT_WS( '-', ap.CODE, ap.NAME ) AS pi_name,
            ap.status_code as pi_status_code,
            ap.start_date as pi_start_date,
            ap.end_date as pi_end_date,
            ap.art_id as pi_art_id,
            ap.object_version_number as pi_object_version_number,
            ai.issue_id as ai_issue_id,
            IF(ai.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai.issue_num)) AS ai_issue_num,
            ai.summary as ai_summary,
            ai.status_id as ai_status_id,
            ai.story_points as ai_story_points,
            ai.issue_type_id as ai_issue_type_id,
            ai.type_code as ai_type_code,
            ai.rank as ai_rank,
            ai.object_version_number as ai_object_version_number,
            af.feature_type as ai_feature_type,
            epic_info.epic_name as ai_epic_name,
            alv.name as ai_epic_color
        FROM
            agile_pi ap
            LEFT JOIN agile_pi_feature apf ON ap.id = apf.pi_id AND apf.program_id = #{programId}
            LEFT JOIN agile_issue ai ON apf.issue_id = ai.issue_id and ai.type_code = 'feature'
            <if test='advancedSearchArgs != null'>
                <if test='advancedSearchArgs.epicId != null'>
                    AND ai.epic_id = #{advancedSearchArgs.epicId}
                </if>
                <if test='advancedSearchArgs.noEpic != "" and advancedSearchArgs.noEpic == "true"'>
                    AND (ai.epic_id IS NULL OR ai.epic_id = 0)
                </if>
            </if>
            LEFT JOIN agile_issue epic_info on ai.epic_id = epic_info.issue_id
            LEFT JOIN lookup_value alv on epic_info.color_code = alv.value_code
            LEFT JOIN agile_feature af ON ai.issue_id = af.issue_id
            LEFT JOIN agile_project_info api ON api.project_id = ai.program_id
        WHERE
            ap.program_id = #{programId}
            AND ap.art_id = #{artId}
            and ap.status_code != 'done'
            order by ap.id, ai.rank
    </select>

    <select id="selectBacklogNoPiList" resultType="io.choerodon.agile.infra.dataobject.SubFeatureDTO">
        SELECT
            ai.issue_id,
            IF(ai.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai.issue_num)) AS issue_num,
            ai.summary,
            ai.status_id,
            ai.story_points,
            ai.issue_type_id,
            ai.type_code,
            ai.rank,
            ai.object_version_number,
            af.feature_type,
            epic_info.epic_name,
            alv.name as epic_color
        FROM
            agile_issue ai
        LEFT JOIN agile_issue epic_info on ai.epic_id = epic_info.issue_id
        LEFT JOIN lookup_value alv on epic_info.color_code = alv.value_code
        LEFT JOIN agile_project_info api ON api.project_id = ai.program_id,
        agile_feature af, agile_issue_status ais
        WHERE
            ai.program_id = #{programId} and ai.type_code = 'feature' and ai.issue_id = af.issue_id
            and ai.status_id = ais.status_id and ais.project_id = #{programId} and ais.is_completed != 1
            AND ai.issue_id NOT IN (
              SELECT apf.issue_id
              FROM agile_pi_feature apf, agile_pi ap
              WHERE apf.program_id = #{programId} and apf.pi_id = ap.id and ap.status_code != 'done')
            <if test='advancedSearchArgs != null'>
                <if test='advancedSearchArgs.epicId != null'>
                    AND ai.epic_id = #{advancedSearchArgs.epicId}
                </if>
                <if test='advancedSearchArgs.noEpic != "" and advancedSearchArgs.noEpic == "true"'>
                    AND (ai.epic_id IS NULL OR ai.epic_id = 0)
                </if>
            </if>
        ORDER BY ai.rank
    </select>

    <select id="selectFeatureIdByFeatureIds" resultType="io.choerodon.agile.infra.dataobject.SubFeatureDTO">
        SELECT
            ai.issue_id,
            ai.issue_num,
            ai.summary,
            ais.name AS ai_status_name,
            ai.story_points,
            ai.issue_type_id,
            ai.type_code,
            ai.rank,
            ai.object_version_number,
            pi_rel.pi_id
        FROM
          agile_issue ai
        left join agile_issue_status ais on ai.status_id = ais.status_id and ais.project_id = #{programId}
        left join (
           select issue_id, pi_id
           from agile_pi_feature apf, agile_pi ap
           where apf.pi_id = ap.id and ap.status_code != 'done'
        ) pi_rel on pi_rel.issue_id = ai.issue_id
        WHERE
          ai.program_id = #{programId}
        and ai.issue_id in
        <foreach collection="featureIds" item="featureId" open="("
                 separator="," close=")">
            #{featureId}
        </foreach>
    </select>

    <select id="selectLastPi" resultType="io.choerodon.agile.infra.dataobject.PiDTO">
        select *
        from agile_pi
        where program_id = #{programId}
        and art_id = #{artId}
        order by id desc
        limit 1
    </select>

    <select id="selectPiListInArt" resultType="io.choerodon.agile.infra.dataobject.PiDTO">
        select *
        from agile_pi
        where program_id = #{programId} and art_id = #{artId}
    </select>

    <select id="queryFeatureIdOrderByRankDesc" resultType="java.lang.Long">
        SELECT ai.issue_id
        FROM agile_issue ai, agile_issue_status ais, agile_pi_feature apf
        WHERE ai.program_id = #{programId} AND apf.issue_id = ai.issue_id AND apf.pi_id = #{piId}
        AND ai.type_code = 'feature'
        AND ai.status_id = ais.status_id and ai.project_id = ais.project_id AND ais.is_completed != 1
        ORDER BY rank DESC
    </select>

    <select id="queryFeatureIds" resultType="java.lang.Long">
        SELECT ai.issue_id
        FROM agile_issue ai, agile_issue_status ais, agile_pi_feature apf
        WHERE ai.program_id = #{programId} AND apf.issue_id = ai.issue_id AND apf.pi_id = #{piId}
        AND ai.type_code = 'feature'
        AND ai.status_id = ais.status_id and ai.project_id = ais.project_id AND ais.is_completed != 1
    </select>

    <select id="queryPiMinRank" resultType="java.lang.String">
        select MIN(ai.rank) from agile_issue ai
        where ai.program_id = #{programId} AND ai.type_code = 'feature' and ai.apply_type = 'program'
        and ai.issue_id
        <choose>
            <when test="piId != null and piId != 0">
                in (SELECT
                apf.issue_id
                FROM
                agile_pi_feature apf,
                agile_pi ap
                WHERE
                apf.program_id = #{programId}
                AND apf.pi_id = ap.id
                AND ap.status_code != 'done'
                AND apf.pi_id = #{piId})
            </when>
            <otherwise>
                not in (SELECT
                apf.issue_id
                FROM
                agile_pi_feature apf,
                agile_pi ap
                WHERE
                apf.program_id = #{programId}
                AND apf.pi_id = ap.id
                AND ap.status_code != 'done' )
            </otherwise>
        </choose>
    </select>

    <select id="selectActivePi" resultType="io.choerodon.agile.infra.dataobject.PiDTO">
        select *
        from agile_pi
        where
        program_id = #{programId}
        and art_id = #{artId}
        and status_code = 'doing'
    </select>

    <select id="selectTodoPiDOList" resultType="io.choerodon.agile.infra.dataobject.PiDTO">
        select *
        from agile_pi
        where program_id = #{programId}
        and art_id = #{artId}
        and status_code = 'todo'
    </select>

    <select id="selectUnDonePiDOList" resultType="io.choerodon.agile.infra.dataobject.PiDTO">
        select *
        from agile_pi
        where program_id = #{programId}
        and art_id = #{artId}
        and status_code != 'done'
    </select>

    <select id="selectTodoPi" resultType="io.choerodon.agile.infra.dataobject.PiTodoDTO">
        select id, code, name
        from agile_pi
        where program_id = #{programId}
        and art_id = #{artId}
        and status_code = 'todo'
    </select>

    <select id="selectFeatureCount" resultType="java.lang.Long">
        select COUNT(apf.issue_id)
        from agile_pi_feature apf, agile_issue ai, agile_issue_status ais
        where apf.program_id = #{programId}
            and apf.pi_id = #{piId}
            and apf.issue_id = ai.issue_id
            and ai.status_id = ais.status_id and ais.project_id = #{programId}
            <if test="isCompleted == true">
                and ais.is_completed = 1
            </if>
            <if test="isCompleted == false">
                and ais.is_completed = 0
            </if>
    </select>

    <select id="selectPiCountByOptions" resultType="java.lang.Long">
        select COUNT(id)
        from agile_pi
        where program_id = #{programId}
        and art_id = #{artId}
        <if test="statusCode == 'done'">
            and status_code = 'done'
        </if>
        <if test="statusCode == 'todo'">
            and status_code = 'todo'
        </if>
    </select>

    <select id="selectRelatedFeatureCount" resultType="java.lang.Long">
        SELECT
         COUNT( DISTINCT ( apf.issue_id ) )
        FROM
         agile_pi_feature apf
        WHERE
         apf.program_id = #{programId}
         AND apf.pi_id IN (
        SELECT
         id
        FROM
         agile_pi
        WHERE
         program_id = #{programId}
         AND art_id = #{artId}
         )
    </select>

    <select id="selectArtFirstPi" resultType="io.choerodon.agile.infra.dataobject.PiDTO">
        select * from agile_pi
        where program_id = #{programId} and art_id = #{artId}
        order by id
        limit 1
    </select>

    <select id="selectNextPi" resultType="io.choerodon.agile.infra.dataobject.PiDTO">
        select * from agile_pi
        where program_id = #{programId} and art_id = #{artId} and id > #{piId}
        order by id
        limit 1
    </select>

    <select id="selectNextListPi" resultType="java.lang.Long">
        select id from agile_pi
        where program_id = #{programId} and art_id = #{artId} and id >= #{piId}
    </select>

    <select id="selectAllOfProgram" resultType="io.choerodon.agile.infra.dataobject.PiNameDTO">
        select
           ap.id,
           ap.code,
           ap.name
        from agile_pi ap
        where ap.program_id = #{programId}
        order by ap.id desc
    </select>

    <select id="selectclosePiListByIssueId" resultType="io.choerodon.agile.infra.dataobject.PiNameDTO">
        select ap.id, ap.code, ap.name
        from agile_pi ap, agile_pi_feature apf
        where apf.program_id = #{programId} and apf.issue_id = #{issueId} and apf.pi_id = ap.id and ap.status_code = 'done'
        order by ap.id
    </select>

    <select id="selectCurrentPiListByIssueId" resultType="io.choerodon.agile.infra.dataobject.PiNameDTO">
        select ap.id, ap.code, ap.name
        from agile_pi ap, agile_pi_feature apf
        where apf.program_id = #{programId} and apf.issue_id = #{issueId} and apf.pi_id = ap.id and ap.status_code != 'done'
    </select>

    <select id="selectRoadMapPiList" resultMap="programPiMap">
        SELECT
            ap.id as pi_id,
            CONCAT_WS( '-', ap.CODE, ap.NAME ) AS pi_name,
            ap.status_code as pi_status_code,
            ap.start_date as pi_start_date,
            ap.end_date as pi_end_date,
            ap.art_id as pi_art_id,
            ap.object_version_number as pi_object_version_number,
            ai.issue_id as ai_issue_id,
            IF(ai.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai.issue_num)) AS ai_issue_num,
            ai.summary as ai_summary,
            ai.status_id as ai_status_id,
            ai.story_points as ai_story_points,
            ai.issue_type_id as ai_issue_type_id,
            ai.type_code as ai_type_code,
            ai.rank as ai_rank,
            ai.object_version_number as ai_object_version_number,
            af.feature_type as ai_feature_type
        FROM
        agile_pi ap
        LEFT JOIN agile_pi_feature apf ON ap.id = apf.pi_id AND apf.program_id = #{programId}
        LEFT JOIN agile_issue ai ON apf.issue_id = ai.issue_id and ai.type_code = 'feature'
        LEFT JOIN agile_feature af ON ai.issue_id = af.issue_id
        LEFT JOIN agile_project_info api ON api.project_id = ai.program_id
        WHERE
        ap.program_id = #{programId}
        AND ap.art_id = #{artId}
        and ap.status_code != 'done'
        order by ap.id, ai.rank
    </select>

</mapper>