<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.choerodon.agile.infra.mapper.SprintMapper">

    <resultMap type="io.choerodon.agile.infra.dataobject.SprintSearchDO" id="SprintSearchDO">
        <id column="sprint_id" property="sprintId"/>
        <id column="sprint_name" property="sprintName"/>
        <id column="sprint_goal" property="sprintGoal"/>
        <id column="start_date" property="startDate"/>
        <id column="end_date" property="endDate"/>
        <id column="status_code" property="statusCode"/>
        <id column="object_version_number" property="objectVersionNumber"/>
        <id column="pi_id" property="piId"/>
        <collection property="assigneeIssueDOList" ofType="io.choerodon.agile.infra.dataobject.AssigneeIssueDO">
            <result property="sprintId" column="asi_sprint_id"/>
            <result property="assigneeId" column="asi_assignee_id"/>
            <result property="totalStoryPoints" column="total_story_points"/>
            <result property="totalRemainingTime" column="total_remaining_time"/>
            <result property="issueCount" column="issue_count"/>
            <result property="remainingStoryPoints" column="remaining_story_points"/>
            <result property="remainingTime" column="remaining_time"/>
            <result property="remainingIssueCount" column="remaining_issue_count"/>
        </collection>
        <collection property="issueSearchDOList" resultMap="issueSearch">
        </collection>
    </resultMap>

    <resultMap type="io.choerodon.agile.infra.dataobject.SprintSearchDO" id="SprintSearchNoIssueDO">
        <id column="sprint_id" property="sprintId"/>
        <id column="sprint_name" property="sprintName"/>
        <id column="sprint_goal" property="sprintGoal"/>
        <id column="start_date" property="startDate"/>
        <id column="end_date" property="endDate"/>
        <id column="status_code" property="statusCode"/>
        <id column="object_version_number" property="objectVersionNumber"/>
        <id column="pi_id" property="piId"/>
        <collection property="assigneeIssueDOList" ofType="io.choerodon.agile.infra.dataobject.AssigneeIssueDO">
            <result property="sprintId" column="asi_sprint_id"/>
            <result property="assigneeId" column="asi_assignee_id"/>
            <result property="totalStoryPoints" column="total_story_points"/>
            <result property="totalRemainingTime" column="total_remaining_time"/>
            <result property="issueCount" column="issue_count"/>
            <result property="remainingStoryPoints" column="remaining_story_points"/>
            <result property="remainingTime" column="remaining_time"/>
            <result property="remainingIssueCount" column="remaining_issue_count"/>
        </collection>
    </resultMap>

    <resultMap id="issueSearch" type="io.choerodon.agile.infra.dataobject.IssueSearchDO">
        <id property="issueId" column="issue_id"/>
        <id property="issueNum" column="issue_num"/>
        <id property="typeCode" column="type_code"/>
        <id property="summary" column="summary"/>
        <id property="reporterId" column="reporter_id"/>
        <id property="description" column="description"/>
        <id property="assigneeId" column="assignee_id"/>
        <id property="projectId" column="project_id"/>
        <id property="epicId" column="epic_id"/>
        <id property="sprintId" column="is_sprint_id"/>
        <id property="storyPoints" column="story_points"/>
        <id property="statusId" column="status_id"/>
        <id property="issueTypeId" column="issue_type_id"/>
        <id property="priorityId" column="priority_id"/>
        <id property="objectVersionNumber" column="is_object_version_number"/>
        <id property="epicName" column="issue_epic_name"/>
        <id property="color" column="color"/>
        <collection property="versionIds" autoMapping="true" ofType="java.lang.Long">
            <id column="version_id"/>
        </collection>
        <collection property="versionNames" autoMapping="true" ofType="java.lang.String">
            <id column="version_name"/>
        </collection>
    </resultMap>

    <select id="queryAssigneeIdsByIssueIds" resultType="java.lang.Long">
        SELECT distinct
        ai.assignee_id
        FROM agile_issue ai
        where ai.assignee_id is not null and ai.assignee_id != 0 AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="queryBacklogIssues" resultMap="issueSearch">
        SELECT
        ai.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        ai.type_code, ai.summary,
        ai.reporter_id, ai.description,
        ai.assignee_id, ai.project_id,
        ai.epic_id, asp1.sprint_id as is_sprint_id,
        ai.story_points, ai.status_id,
        ai.priority_id,
        ai.issue_type_id,
        ai.object_version_number as is_object_version_number, ai.priority_code,
        ai1.epic_name AS issue_epic_name,
        alv2.name AS color,
        apv1.version_id AS version_id,
        apv1.name AS version_name
        FROM (select ai3.* from agile_issue ai3 where ai3.issue_id in
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
        )ai
        LEFT JOIN agile_issue_status ais ON ai.status_id = ais.status_id and ai.project_id = ais.project_id
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_issue ai1 ON ai.epic_id = ai1.issue_id
        LEFT JOIN agile_lookup_value alv2 ON ai1.color_code = alv2.value_code
        LEFT JOIN (SELECT aisr.issue_id, asp.sprint_id
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.sprint_id = asp.sprint_id AND asp.status_code != 'closed'
        ) asp1 ON asp1.issue_id = ai.issue_id
        LEFT JOIN (SELECT avir.issue_id, avir.version_id, apv.name
        FROM agile_version_issue_rel avir, agile_product_version apv
        WHERE avir.version_id = apv.version_id AND avir.relation_type = 'fix'
        ) apv1 ON apv1.issue_id = ai.issue_id
        WHERE asp1.sprint_id is null and ais.is_completed != 1
        and ai.type_code != 'sub_task' and ai.apply_type = 'agile'
        and ai.type_code != 'issue_epic' and ai.project_id = #{projectId}
        ORDER BY ai.rank asc
    </select>

    <select id="queryStoryPoint" resultType="java.math.BigDecimal">
        SELECT IFNULL(SUM(ai.story_points), 0)
        FROM agile_issue ai
        WHERE ai.project_id = #{projectId}
        AND ai.type_code = 'story'
        AND ai.issue_id in (select aisr.issue_id from agile_issue_sprint_rel aisr where aisr.sprint_id = #{sprintId})
        AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId" index="index"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        and ai.status_id in
        <foreach collection="statusIds" item="statusId" index="index"
                 open="(" close=")" separator=",">
            #{statusId}
        </foreach>
    </select>

    <select id="queryIssueCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM agile_issue ai, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND type_code NOT IN ('sub_task', 'issue_epic')
    </select>

    <sql id="queryActiveSprintSql">
        SELECT
        sp.sprint_id, sp.sprint_name,
        sp.sprint_goal, start_date,
        sp.end_date, status_code,
        sp.object_version_number,
        sp.pi_id
        FROM agile_sprint sp
        WHERE sp.project_id = #{projectId} AND sp.status_code = 'started'
    </sql>

    <select id="queryActiveSprintNoIssueIds" resultType="io.choerodon.agile.infra.dataobject.SprintSearchDO">
        select
        spa.*
        from
        (<include refid="queryActiveSprintSql"/>)spa
    </select>

    <sql id="queryAssigneeIssueByPlanSprintId">
        SELECT
        cc.asi_sprint_id,
        cc.asi_assignee_id,
        cc.total_story_points,
        cc.total_remaining_time,
        cc.issue_count,
        bb.remaining_story_points,
        bb.remaining_time,
        bb.remaining_issue_count
        FROM
        (
        SELECT
        a.sprint_id AS asi_sprint_id,
        a.assignee_id AS asi_assignee_id,
        SUM( a.story_points ) AS total_story_points,
        SUM( a.remaining_time ) AS total_remaining_time,
        COUNT( 1 ) AS issue_count
        FROM
        (
        SELECT
        aisr.sprint_id,
        CASE WHEN
        ai.assignee_id IS NULL THEN 0 ELSE ai.assignee_id
        END AS assignee_id,
        ai.story_points,
        ai.remaining_time
        FROM
        agile_issue ai,
        agile_issue_sprint_rel aisr
        WHERE
        aisr.issue_id = ai.issue_id
        AND aisr.sprint_id in (
                SELECT
            asp.sprint_id
        FROM
            agile_sprint asp
        WHERE
            asp.project_id = #{projectId}
            AND asp.status_code = 'sprint_planning')
        ) a
        GROUP BY
        a.sprint_id,
        a.assignee_id
        ) cc
        LEFT JOIN (
        SELECT
        a2.sprint_id AS asi_sprint_id,
        a2.assignee_id AS asi_assignee_id,
        SUM( a2.story_points ) AS remaining_story_points,
        SUM( a2.remaining_time ) AS remaining_time,
        COUNT( 1 ) AS remaining_issue_count
        FROM
        (
        SELECT
        aisr.sprint_id,
        CASE WHEN
        ai2.assignee_id IS NULL THEN 0 ELSE ai2.assignee_id
        END AS assignee_id,
        ai2.story_points,
        ai2.remaining_time
        FROM
        agile_issue ai2,
        agile_issue_sprint_rel aisr
        WHERE
        aisr.issue_id = ai2.issue_id
        AND aisr.sprint_id in (
                SELECT
            asp.sprint_id
        FROM
            agile_sprint asp
        WHERE
            asp.project_id = #{projectId}
            AND asp.status_code = 'sprint_planning')
        AND ai2.status_id IN ( SELECT ais.status_id FROM agile_issue_status ais WHERE ais.project_id = #{projectId} AND ais.is_completed != 1 )
        ) a2
        GROUP BY
        a2.sprint_id,
        a2.assignee_id
        ) bb ON cc.asi_assignee_id = bb.asi_assignee_id and cc.asi_sprint_id = bb.asi_sprint_id order by cc.asi_assignee_id
    </sql>

    <select id="queryAssigneeIssueByActiveSprintId" resultType="io.choerodon.agile.infra.dataobject.AssigneeIssueDO">
      SELECT
        cc.sprint_id,
        cc.assignee_id,
        cc.total_story_points,
        cc.total_remaining_time,
        cc.issue_count,
        bb.remaining_story_points,
        bb.remaining_time,
        bb.remaining_issue_count
    FROM
        (
        SELECT
            a.sprint_id,
            a.assignee_id,
            SUM( a.story_points ) AS total_story_points,
            SUM( a.remaining_time ) AS total_remaining_time,
            COUNT( 1 ) AS issue_count
        FROM
            (
            SELECT
                aisr.sprint_id,
                CASE WHEN
                  ai.assignee_id IS NULL THEN 0 ELSE ai.assignee_id
                END AS assignee_id,
                ai.story_points,
                ai.remaining_time
            FROM
                agile_issue ai,
                agile_issue_sprint_rel aisr
            WHERE
                aisr.issue_id = ai.issue_id
                AND aisr.sprint_id = #{sprintId}
                AND aisr.project_id = #{projectId}
            ) a
        GROUP BY
            a.assignee_id
        ) cc
        LEFT JOIN (
        SELECT
            a2.sprint_id,
            a2.assignee_id,
            SUM( a2.story_points ) AS remaining_story_points,
            SUM( a2.remaining_time ) AS remaining_time,
            COUNT( 1 ) AS remaining_issue_count
        FROM
            (
            SELECT
                aisr.sprint_id,
                CASE WHEN
                  ai2.assignee_id IS NULL THEN 0 ELSE ai2.assignee_id
                END AS assignee_id,
                ai2.story_points,
                ai2.remaining_time
            FROM
                agile_issue ai2,
                agile_issue_sprint_rel aisr
            WHERE
                aisr.issue_id = ai2.issue_id
                AND aisr.sprint_id = #{sprintId}
                AND aisr.project_id = #{projectId}
                AND ai2.status_id IN ( SELECT ais.status_id FROM agile_issue_status ais WHERE ais.project_id = #{projectId} AND ais.is_completed != 1 )
            ) a2
        GROUP BY
        a2.assignee_id
        ) bb ON cc.assignee_id = bb.assignee_id order by cc.assignee_id
    </select>

    <sql id="querySprintIssueByIssueIds">
        SELECT
        ai2.issue_id,
        IF(ai2.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai2.issue_num)) AS issue_num,
        ai2.summary,
        ai2.rank,
        ai2.reporter_id, ai2.description,
        ai2.assignee_id, ai2.project_id,
        ai2.epic_id,
        aisr2.sprint_id as is_sprint_id,
        ai2.story_points, ai2.status_id,
        ai2.issue_type_id,
        ai2.priority_id,
        ai2.object_version_number as is_object_version_number, ai2.priority_code,
        ai1.epic_name AS issue_epic_name,
        alv2.name AS color,
        apv1.version_id AS version_id,
        apv1.name AS version_name
        FROM
        (select * from agile_issue ai4 WHERE
        ai4.issue_id in
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>)ai2
        LEFT JOIN agile_project_info api ON ai2.project_id = api.project_id
        LEFT JOIN agile_issue ai1 ON ai2.epic_id = ai1.issue_id
        LEFT JOIN agile_lookup_value alv2 ON ai1.color_code = alv2.value_code
        left join agile_issue_sprint_rel aisr2 on aisr2.issue_id = ai2.issue_id
        LEFT JOIN
        (
        SELECT
        avir.version_id,
        avir.issue_id,
        apv.NAME
        FROM
        agile_version_issue_rel avir
        LEFT JOIN agile_product_version apv ON avir.version_id = apv.version_id
        where avir.relation_type = 'fix'
        ) apv1
        ON apv1.issue_id = ai2.issue_id
        where aisr2.sprint_id in (SELECT asp2.sprint_id
        FROM agile_sprint asp2 WHERE aisr2.sprint_id = asp2.sprint_id AND asp2.status_code = 'sprint_planning')
    </sql>

    <select id="queryBacklogSprintAssigneeIds" resultType="java.lang.Long">
        SELECT DISTINCT
            ai.assignee_id
        FROM
            agile_issue ai
        WHERE
            ai.project_id = #{projectId}
            AND ai.issue_id IN (
        SELECT
            aisr.issue_id
        FROM
            agile_issue_sprint_rel aisr
        WHERE
            aisr.sprint_id IN ( SELECT asp.sprint_id FROM agile_sprint asp WHERE asp.project_id = #{projectId} AND asp.status_code != 'closed' )
            )
            AND ai.assignee_id IS NOT NULL
    </select>

    <select id="queryActiveSprintIssueSearchByIssueIds" resultMap="issueSearch">
        SELECT
        ai2.issue_id,
        IF(ai2.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai2.issue_num)) AS issue_num,
        ai2.summary,
        ai2.rank,
        ai2.reporter_id, ai2.description,
        ai2.assignee_id, ai2.project_id,
        ai2.epic_id, #{sprintId} as is_sprint_id,
        ai2.story_points, ai2.status_id,
        ai2.issue_type_id,
        ai2.priority_id,
        ai2.object_version_number as is_object_version_number, ai2.priority_code,
        ai1.epic_name AS issue_epic_name,
        alv2.name AS color,
        apv1.version_id AS version_id,
        apv1.name AS version_name
        FROM
        (select * from agile_issue ai4 WHERE
        ai4.issue_id in
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>)ai2
        LEFT JOIN agile_project_info api ON ai2.project_id = api.project_id
        LEFT JOIN agile_issue ai1 ON ai2.epic_id = ai1.issue_id
        LEFT JOIN agile_lookup_value alv2 ON ai1.color_code = alv2.value_code
        LEFT JOIN (
            SELECT
            avir.version_id,
            avir.issue_id,
            apv.NAME
            FROM
            agile_version_issue_rel avir
            LEFT JOIN agile_product_version apv ON avir.version_id = apv.version_id
            where avir.relation_type = 'fix') apv1
        ON apv1.issue_id = ai2.issue_id
        where ai2.issue_id in (select aisr2.issue_id from  agile_issue_sprint_rel aisr2 where aisr2.sprint_id = #{sprintId})
        order by ai2.rank asc
    </select>

    <sql id="queryPlanSprintSql">
        SELECT
        sp.sprint_id, sp.sprint_name,
        sp.sprint_goal, start_date,
        sp.end_date, status_code,
        sp.object_version_number,
        sp.pi_id
        FROM agile_sprint sp
        WHERE sp.project_id = #{projectId} AND sp.status_code = 'sprint_planning'
    </sql>

    <select id="queryPlanSprint" resultMap="SprintSearchDO">
        select
        spa.*,
        qais.asi_sprint_id,
        qais.asi_assignee_id,
        qais.total_story_points,
        qais.total_remaining_time,
        qais.issue_count,
        qais.remaining_story_points,
        qais.remaining_time,
        qais.remaining_issue_count,
        qsii.*
        from
        (<include refid="queryPlanSprintSql"/>)spa
        left join(<include refid="querySprintIssueByIssueIds"/>)qsii on qsii.is_sprint_id = spa.sprint_id
        left join (<include refid="queryAssigneeIssueByPlanSprintId"/>)qais on spa.sprint_id = qais.asi_sprint_id order by spa.sprint_id DESC,qsii.rank ASC
    </select>

    <select id="queryPlanSprintNoIssueIds" resultMap="SprintSearchNoIssueDO">
        select
        spa.sprint_id,
        spa.sprint_name,
        spa.sprint_goal,
        spa.start_date,
        spa.end_date,
        spa.status_code,
        spa.object_version_number,
        spa.pi_id,
        qais.asi_sprint_id,
        qais.asi_assignee_id,
        qais.total_story_points,
        qais.total_remaining_time,
        qais.issue_count,
        qais.remaining_story_points,
        qais.remaining_time,
        qais.remaining_issue_count
        from
        (<include refid="queryPlanSprintSql"/>)spa
        left join (<include refid="queryAssigneeIssueByPlanSprintId"/>)qais on spa.sprint_id = qais.asi_sprint_id order by spa.sprint_id DESC
    </select>

    <select id="queryNotCloseSprintIdByIssueId" resultType="java.lang.Long">
       SELECT
            aisr.sprint_id
        FROM
            agile_issue_sprint_rel aisr
            LEFT JOIN agile_sprint asp ON asp.sprint_id = aisr.sprint_id
        WHERE
            aisr.issue_id = #{issueId} and asp.status_code != 'closed'
            and aisr.project_id = #{projectId}
    </select>

    <select id="queryNotPlanSprintByProjectId" resultType="io.choerodon.agile.infra.dataobject.SprintDO">
        SELECT
        asp.sprint_name,
        asp.sprint_id,
        asp.start_date,
        asp.end_date,
        asp.status_code,
        asp.actual_end_date
        FROM
        agile_sprint asp
        WHERE
        asp.project_id = #{projectId}
        and asp.status_code != 'sprint_planning'
        and (asp.start_date &gt;= #{startDate} or (asp.start_date &lt;= #{startDate} and asp.end_date &gt;= #{startDate}))
        <if test="endDate != null">
            and asp.start_date &lt;= #{endDate}
        </if>
        order by asp.start_date asc
    </select>

    <select id="queryNameByOptions" resultType="io.choerodon.agile.infra.dataobject.SprintNameDO">
        SELECT
        sprint_id,
        sprint_name,
        start_date,
        end_date,
        status_code
        FROM agile_sprint
        WHERE project_id = #{projectId}
        <if test="sprintStatusCodes != null and sprintStatusCodes.size > 0">
            AND status_code IN
            <foreach collection="sprintStatusCodes" item="sprintStatusCode"
                     open="(" close=")" separator=",">
                #{sprintStatusCode}
            </foreach>
        </if>
        ORDER BY sprint_id DESC
    </select>

    <select id="queryNotDoneIssueCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND ai.type_code NOT IN ('issue_epic')
        AND ai.status_id = ais.status_id and ai.project_id = ais.project_id AND ais.is_completed != 1
    </select>

    <select id="queryDoneIssueCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND ai.type_code NOT IN ('issue_epic')
        AND ai.status_id = ais.status_id and ai.project_id = ais.project_id AND ais.is_completed = 1
    </select>

    <select id="queryPlanSprintName" resultType="io.choerodon.agile.infra.dataobject.SprintNameDO">
        SELECT
        sprint_id,
        sprint_name
        FROM agile_sprint
        WHERE project_id = #{projectId} AND status_code = 'sprint_planning'
    </select>


    <select id="queryByProjectIdAndSprintId" resultType="io.choerodon.agile.infra.dataobject.SprintDO">
        SELECT *
        FROM agile_sprint
        WHERE sprint_id = #{sprintId} AND project_id = #{projectId}
    </select>

    <select id="getActiveSprint" resultType="io.choerodon.agile.infra.dataobject.SprintDO">
        SELECT
            sprint_id,
            sprint_name,
            start_date,
            end_date,
            project_id
        FROM
            agile_sprint
        WHERE
            project_id = #{projectId}
            AND status_code = 'started'
    </select>

    <select id="hasIssue" resultType="java.lang.Boolean">
        select CASE COUNT(1) WHEN 0 THEN FALSE ELSE TRUE END
        from agile_issue ai
        where ai.project_id = #{projectId} AND ai.type_code != 'sub_task' and ai.type_code != 'issue_epic' and ai.apply_type = 'agile'
        and ai.issue_id
        <choose>
            <when test="sprintId != null and sprintId != 0">
                in (SELECT
                aisr1.issue_id
                FROM
                agile_issue_sprint_rel aisr1,
                agile_sprint asp
                WHERE
                aisr1.project_id = #{projectId}
                AND aisr1.sprint_id = asp.sprint_id
                AND asp.status_code != 'closed'
                AND aisr1.sprint_id = #{sprintId})
            </when>
            <otherwise>
                not in (SELECT
                aisr1.issue_id
                FROM
                agile_issue_sprint_rel aisr1,
                agile_sprint asp
                WHERE
                aisr1.project_id = #{projectId}
                AND aisr1.sprint_id = asp.sprint_id
                AND asp.status_code != 'closed' )
            </otherwise>
        </choose>
    </select>

    <select id="queryMaxRank" resultType="java.lang.String">
        select MAX(ai.rank) from agile_issue ai
        where ai.project_id = #{projectId} AND ai.type_code != 'sub_task' and ai.type_code != 'issue_epic' and ai.apply_type = 'agile'
        and ai.issue_id
        <choose>
            <when test="sprintId != null and sprintId != 0">
                in(SELECT
                aisr1.issue_id
                FROM
                agile_issue_sprint_rel aisr1,
                agile_sprint asp
                WHERE
                aisr1.project_id = #{projectId}
                AND aisr1.sprint_id = asp.sprint_id
                AND asp.status_code != 'closed'
                AND aisr1.sprint_id = #{sprintId})
            </when>
            <otherwise>
                not in (SELECT
                aisr1.issue_id
                FROM
                agile_issue_sprint_rel aisr1,
                agile_sprint asp
                WHERE
                aisr1.project_id = #{projectId}
                AND aisr1.sprint_id = asp.sprint_id
                AND asp.status_code != 'closed' )
            </otherwise>
        </choose>
    </select>

    <select id="selectCountByStartedSprint" resultType="java.lang.Integer">
        SELECT
            COUNT(sprint_id)
        FROM
            agile_sprint
        WHERE
            project_id = #{projectId}
            AND status_code = 'started'
    </select>

    <select id="queryMinRank" resultType="java.lang.String">
        SELECT MIN(ai.rank)
        FROM agile_issue ai
        LEFT JOIN (SELECT aisr1.sprint_id, aisr1.issue_id
        FROM agile_issue_sprint_rel aisr1, agile_sprint asp
        WHERE aisr1.project_id = #{projectId} AND aisr1.sprint_id = asp.sprint_id
        AND asp.status_code != 'closed') aisr ON aisr.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        <choose>
            <when test="sprintId != null and sprintId != 0">
                AND aisr.sprint_id = #{sprintId}
            </when>
            <otherwise>
                AND (aisr.sprint_id IS NULL OR aisr.sprint_id = 0)
            </otherwise>
        </choose>
    </select>

    <select id="queryLastSprint" resultType="io.choerodon.agile.infra.dataobject.SprintDO">
        SELECT *
        FROM agile_sprint
        WHERE sprint_id = (
                SELECT MAX(sprint_id)
                FROM agile_sprint
                WHERE project_id = #{projectId} and pi_id is null
            )
    </select>

    <select id="queryIssueIdOrderByRankDesc" resultType="java.lang.Long">
        SELECT ai.issue_id
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        AND ai.status_id = ais.status_id and ai.project_id = ais.project_id AND ais.is_completed != 1
        ORDER BY rank DESC
    </select>

    <select id="queryUnDoneSubOfParentIds" resultType="java.lang.Long">
        SELECT
          ai.issue_id as issue_id
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId}
              AND aisr.issue_id = ai.issue_id
              AND aisr.sprint_id = #{sprintId}
              AND ai.status_id = ais.status_id
              AND ais.project_id = #{projectId}
              AND ais.is_completed = 1
              AND ai.issue_id IN (SELECT ai2.parent_issue_id
                                  FROM agile_issue ai2, agile_issue_status ais2, agile_issue_sprint_rel aisr2
                                  WHERE ai2.project_id = #{projectId}
                                        AND aisr2.issue_id = ai2.issue_id
                                        AND aisr2.sprint_id = #{sprintId}
                                        AND ai2.type_code = 'sub_task'
                                        AND ai2.status_id = ais2.status_id
                                        AND ais2.project_id = #{projectId}
                                        AND ais2.is_completed != 1)
    </select>

    <select id="queryParentsDoneSubtaskUnDoneIds" resultType="java.lang.Long">
        SELECT
          ai.issue_id as issue_id
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId}
              AND aisr.issue_id = ai.issue_id
              AND aisr.sprint_id = #{sprintId}
              AND ai.status_id = ais.status_id
              AND ais.project_id = #{projectId}
              AND ais.is_completed = 1
              AND ai.issue_id IN (SELECT ai2.parent_issue_id
                                  FROM agile_issue ai2, agile_issue_status ais2, agile_issue_sprint_rel aisr2
                                  WHERE ai2.project_id = #{projectId}
                                        AND aisr2.issue_id = ai2.issue_id
                                        AND aisr2.sprint_id = #{sprintId}
                                        AND ai2.type_code = 'sub_task'
                                        AND ai2.status_id = ais2.status_id
                                        AND ais2.project_id = #{projectId}
                                        AND ais2.is_completed != 1)
        UNION ALL
        select ai3.issue_id as issue_id
        from agile_issue ai3
        where ai3.parent_issue_id in
        (SELECT
          ai.issue_id as issue_id
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId}
              AND aisr.issue_id = ai.issue_id
              AND aisr.sprint_id = #{sprintId}
              AND ai.status_id = ais.status_id
              AND ais.project_id = #{projectId}
              AND ais.is_completed = 1
              AND ai.issue_id IN (SELECT ai2.parent_issue_id
                                  FROM agile_issue ai2, agile_issue_status ais2, agile_issue_sprint_rel aisr2
                                  WHERE ai2.project_id = #{projectId}
                                        AND aisr2.issue_id = ai2.issue_id
                                        AND aisr2.sprint_id = #{sprintId}
                                        AND ai2.type_code = 'sub_task'
                                        AND ai2.status_id = ais2.status_id
                                        AND ais2.project_id = #{projectId}
                                        AND ais2.is_completed != 1))

    </select>

    <select id="queryAllRankIssueIds" resultType="java.lang.Long">
        SELECT ai.issue_id
        FROM agile_issue ai, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        ORDER BY rank DESC
    </select>

    <select id="queryParentsDoneUnfinishedSubtasks" resultType="io.choerodon.agile.infra.dataobject.IssueNumDO">
        SELECT ai.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num, ai.project_id
        FROM agile_issue ai
              LEFT JOIN agile_project_info api ON ai.project_id = api.project_id,
              agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
               AND ai.status_id = ais.status_id and ai.project_id = ais.project_id AND ais.is_completed = 1
               AND ai.issue_id IN (SELECT ai2.parent_issue_id
                                    FROM agile_issue ai2, agile_issue_status ais2, agile_issue_sprint_rel aisr2
                                    WHERE ai2.project_id = #{projectId} AND aisr2.issue_id = ai2.issue_id AND aisr2.sprint_id = #{sprintId}
				                    AND ai2.type_code = 'sub_task'
                                    AND ai2.status_id = ais2.status_id and ai2.project_id = ais2.project_id AND ais2.is_completed != 1
                                    )

    </select>

    <select id="queryIssueIds" resultType="java.lang.Long">
        SELECT ai.issue_id
        FROM  agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
              AND ai.type_code != 'sub_task' AND ai.status_id = ais.status_id and ai.project_id = ais.project_id
              AND ais.is_completed != 1
    </select>

    <select id="queryUnClosedSprint" resultType="io.choerodon.agile.infra.dataobject.SprintDO">
        SELECT
          sprint_id,
          sprint_name
        FROM
            agile_sprint
        WHERE
            project_id = #{projectId}
            AND status_code != 'closed'
        order by sprint_id
    </select>

    <select id="queryIssueCountInActiveBoard" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM agile_issue ai, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND ai.type_code != 'sub_task' and ai.type_code != 'issue_epic' and ai.apply_type = 'agile'
    </select>

    <select id="selectNotDoneByPiId" resultType="java.lang.Long">
        select sprint_id from agile_sprint
        where project_id = #{projectId} and pi_id = #{piId} and status_code != 'done'
    </select>

    <update id="updateSprintNameByBatch">
        update agile_sprint asp, agile_pi ap
        set asp.sprint_name = concat('PI-', ap.name, ':SPRINT-', asp.sprint_id)
        where asp.project_id = #{projectId} and asp.pi_id = ap.id and asp.sprint_id in
        <foreach collection="sprintIds" item="sprintId" open="("
                 separator="," close=")">
            #{sprintId}
        </foreach>
    </update>

</mapper>