<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.agile.infra.mapper.ReportMapper">

    <resultMap id="versionIssue" type="io.choerodon.agile.infra.dataobject.VersionIssueChangeDO">
        <id property="changeDate" column="change_date"/>
        <collection property="issueIds" autoMapping="true" ofType="java.lang.Long">
            <id column="issue_id"/>
        </collection>
        <collection property="logIds" autoMapping="true" ofType="java.lang.Long">
            <id column="log_id"/>
        </collection>
        <collection property="addIssueIds" autoMapping="true" ofType="java.lang.Long">
            <id column="add_issue_id"/>
        </collection>
        <collection property="removeIssueIds" autoMapping="true" ofType="java.lang.Long">
            <id column="remove_issue_id"/>
        </collection>
    </resultMap>

    <select id="queryIssueIdsBeforeSprintStart" resultType="java.lang.Long">
        SELECT adl5.issue_id
        FROM agile_data_log adl5
        WHERE adl5.project_id = #{sprintDTO.projectId}
        and adl5.field = 'Sprint'
        and adl5.log_id IN
        (SELECT MAX(adl.log_id) AS log_id
                              FROM agile_data_log adl
                              WHERE adl.project_id = #{sprintDTO.projectId} and adl.field = 'Sprint' AND adl.creation_date &lt;= #{sprintDTO.startDate}
                              GROUP BY
                                  adl.issue_id)
        AND adl5.new_value REGEXP '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$'
        UNION
        SELECT aisr2.issue_id
        FROM
            agile_issue_sprint_rel aisr2
        WHERE
            aisr2.creation_date &lt;= #{sprintDTO.startDate}
            AND aisr2.sprint_id = #{sprintDTO.sprintId}
    </select>

    <select id="queryValueBeforeSprintStart" resultType="io.choerodon.agile.infra.dataobject.ReportIssueDTO">
        SELECT
        IFNULL(a.new_string,0) as new_value,
        d.issue_id,
        #{sprintDTO.startDate} AS date,
        'startSprint' AS type,
        1 AS statistical,
        0 AS old_value,
        CONCAT_WS( '-', api.project_code, d.issue_num ) AS issue_num,
        CONCAT_WS( '-', api2.project_code, cd.issue_num ) AS parent_issue_num,
        cd.issue_id AS parent_issue_id
        FROM (
        SELECT
        ai.issue_id,
        ai.issue_num,
        ai.project_id,
        ai.parent_issue_id
        FROM
        agile_issue ai
        WHERE
        ai.project_id = #{sprintDTO.projectId} and
        ai.issue_id IN
        <foreach collection="issueIdList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        ) d
        LEFT JOIN (
        select
        adl3.new_string,adl3.issue_id,adl3.creation_date
        from
        agile_data_log adl3 where adl3.project_id = #{sprintDTO.projectId} and adl3.field = #{field} and adl3.log_id in
        (SELECT
        MAX(adl.log_id) as log_id
        FROM
        agile_data_log adl
        WHERE
        adl.project_id = #{sprintDTO.projectId} and
        adl.field = #{field}
        AND adl.creation_date &lt; #{sprintDTO.startDate}
        AND adl.issue_id IN
        <foreach collection="issueIdList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        GROUP BY
        adl.issue_id)
        ) a ON a.issue_id = d.issue_id
        LEFT JOIN agile_project_info api ON api.project_id = d.project_id
        left JOIN agile_issue cd on d.parent_issue_id = cd.issue_id LEFT JOIN agile_project_info api2 ON api2.project_id
        = cd.project_id
    </select>

    <select id="queryAddIssueIdsDuringSprint" resultType="java.lang.Long">
        SELECT DISTINCT adl2.issue_id
        FROM agile_data_log adl2
        WHERE
            adl2.project_id = #{sprintDTO.projectId}
            and  adl2.field = 'Sprint'
            AND adl2.creation_date &gt; #{sprintDTO.startDate} AND
            adl2.creation_date &lt;= #{sprintDTO.actualEndDate}
            AND adl2.new_value REGEXP '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$'
            AND (adl2.old_value is null or not (adl2.old_value REGEXP '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$'))

    </select>

    <select id="queryAddIssueValueDuringSprint" resultType="io.choerodon.agile.infra.dataobject.ReportIssueDTO">
        select
        ifnull(bbb.new_value,0) AS new_value,
        bbb.issue_id as issue_id,
        bbb.date as date,
        0 as old_value,
        'addDuringSprint' as type,
        CONCAT_WS('-', api.project_code, aaa.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id,
        case when
        (
        SELECT CASE WHEN adl3.issue_id IS NOT NULL AND adl3.new_value IS NULL
        THEN 1
        ELSE 0 END
        FROM
        agile_data_log adl3
        WHERE
        adl3.issue_id = bbb.issue_id
        AND adl3.creation_date &lt; bbb.date
        AND adl3.field = 'resolution'
        AND adl3.project_id = #{sprintDTO.projectId}
        ORDER BY adl3.creation_date DESC
        LIMIT 1
        ) is null then 1
        else
        (
        SELECT CASE WHEN adl3.issue_id IS NOT NULL AND adl3.new_value IS NULL
        THEN 1
        ELSE 0 END
        FROM
        agile_data_log adl3
        WHERE
        adl3.issue_id = bbb.issue_id
        AND adl3.creation_date &lt; bbb.date
        AND adl3.field = 'resolution'
        AND adl3.project_id = #{sprintDTO.projectId}
        ORDER BY adl3.creation_date DESC
        LIMIT 1
        ) end as statistical
        from (
        SELECT
        adl.issue_id,
        adl.creation_date as date,
        (select adl2.new_string from agile_data_log adl2 where adl2.field = #{field} and adl2.issue_id =
        adl.issue_id and adl2.creation_date &lt; adl.creation_date order by adl2.creation_date desc limit 1) as
        new_value
        FROM
        agile_data_log adl
        WHERE
        adl.field = 'Sprint'
        AND adl.project_id = #{sprintDTO.projectId}
        AND adl.creation_date &gt; #{sprintDTO.startDate}
        AND adl.creation_date &lt; #{sprintDTO.actualEndDate}
        AND adl.new_value REGEXP
        '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$'
        AND adl.issue_id IN
        <foreach collection="issueIdAddList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        )bbb left join agile_issue aaa on aaa.issue_id = bbb.issue_id LEFT JOIN agile_issue ai2 on aaa.parent_issue_id =
        ai2.issue_id LEFT JOIN
        agile_project_info api2
        ON api2.project_id = ai2.project_id LEFT JOIN
        agile_project_info api
        ON api.project_id = aaa.project_id
    </select>

    <select id="queryRemoveIssueIdsDuringSprintWithOutSubEpicIssue" resultType="java.lang.Long">
        SELECT DISTINCT ai.issue_id
        FROM (SELECT adl2.issue_id
              FROM agile_data_log adl2
              WHERE
                  adl2.project_id = #{sprintDTO.projectId} AND
                  adl2.field = 'Sprint' AND adl2.creation_date &gt; #{sprintDTO.startDate} AND
                  adl2.creation_date &lt;= #{sprintDTO.actualEndDate}
                  AND adl2.old_value REGEXP '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$'
                  AND (adl2.new_value is null or not (adl2.new_value REGEXP '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$'))
                  AND adl2.issue_id NOT IN (SELECT ais.issue_id
                                            FROM agile_issue_sprint_rel ais
                                            WHERE ais.sprint_id = #{sprintDTO.sprintId})) aa LEFT JOIN agile_issue ai
                ON ai.issue_id = aa.issue_id
        WHERE ai.type_code in ('story', 'task', 'bug')
    </select>

    <select id="queryRemoveIssueValueDurationSprint"
            resultType="io.choerodon.agile.infra.dataobject.ReportIssueDTO">
        SELECT
        a.*,
        0 as new_value,
        'removeDuringSprint' as type,
        1 as statistical,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id,
        case when (
        SELECT CASE WHEN adl3.issue_id IS NOT NULL AND adl3.new_value IS NULL
        THEN 1
        ELSE 0 END
        FROM
        agile_data_log adl3
        WHERE
        adl3.issue_id = a.issue_id
        AND adl3.creation_date &lt; a.date
        AND adl3.field = 'resolution'
        AND adl3.project_id = #{sprintDTO.projectId}
        ORDER BY adl3.creation_date DESC
        LIMIT 1
        ) is null then 1
        else
        (
        SELECT CASE WHEN adl3.issue_id IS NOT NULL AND adl3.new_value IS NULL
        THEN 1
        ELSE 0 END
        FROM
        agile_data_log adl3
        WHERE
        adl3.issue_id = a.issue_id
        AND adl3.creation_date &lt; a.date
        AND adl3.field = 'resolution'
        AND adl3.project_id = #{sprintDTO.projectId}
        ORDER BY adl3.creation_date DESC
        LIMIT 1
        ) end
        as statistical
        FROM
        (
        SELECT
        adl.issue_id,
        adl.creation_date as date,
        IFNULL((select adl2.new_string from agile_data_log adl2 where adl2.field = #{field} and adl2.issue_id =
        adl.issue_id and adl2.creation_date &lt; adl.creation_date order by adl2.creation_date desc limit 1) ,0)as
        old_value
        FROM
        agile_data_log adl
        WHERE
        adl.field = 'Sprint'
        AND adl.project_id = #{sprintDTO.projectId}
        AND adl.creation_date &gt; #{sprintDTO.startDate}
        AND adl.creation_date &lt; #{sprintDTO.actualEndDate}
        AND adl.old_value REGEXP
        '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$'
        AND (adl.new_value is null or not (adl.new_value REGEXP
        '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$'))
        AND adl.issue_id IN
        <foreach collection="issueIdRemoveList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        ) a LEFT JOIN agile_issue ai on ai.issue_id = a.issue_id LEFT JOIN agile_project_info api ON api.project_id =
        ai.project_id LEFT JOIN agile_issue ai2 on ai.parent_issue_id = ai2.issue_id LEFT JOIN agile_project_info api2
        ON api2.project_id =
        ai2.project_id
    </select>

    <select id="queryAddIssueDuringSprint" resultType="io.choerodon.agile.infra.dataobject.ReportIssueDTO">
        SELECT
        ai.issue_id,
        abd.date,
        'addDuringSprint' as type,
        0 as old_value,
        1 as new_value,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,CONCAT_WS('-', api2.project_code,
        ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id,
        case when
        (
        SELECT
        CASE
        WHEN
        adl2.issue_id IS NOT NULL
        AND adl2.new_value IS NULL THEN
        1 ELSE 0
        END
        FROM
        agile_data_log adl2
        WHERE
        adl2.issue_id = ai.issue_id
        AND adl2.creation_date &lt; abd.date
        AND adl2.field = 'resolution'
        AND adl2.project_id = #{sprintDTO.projectId}
        ORDER BY
        adl2.creation_date DESC
        LIMIT 1
        ) is null then 1
        else
        (
        SELECT
        CASE
        WHEN
        adl2.issue_id IS NOT NULL
        AND adl2.new_value IS NULL THEN
        1 ELSE 0
        END
        FROM
        agile_data_log adl2
        WHERE
        adl2.issue_id = ai.issue_id
        AND adl2.creation_date &lt; abd.date
        AND adl2.field = 'resolution'
        AND adl2.project_id = #{sprintDTO.projectId}
        ORDER BY
        adl2.creation_date DESC
        LIMIT 1
        ) end AS statistical
        FROM (SELECT
        adl.issue_id,
        adl.creation_date AS date
        FROM
        agile_data_log adl
        WHERE
        adl.field = 'Sprint'
        AND adl.project_id = #{sprintDTO.projectId}
        AND adl.creation_date &gt; #{sprintDTO.startDate}
        AND adl.creation_date &lt; #{sprintDTO.actualEndDate}
        AND adl.new_value REGEXP
        '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$'
        AND adl.issue_id IN
        <foreach collection="issueIdAddList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>)abd left join agile_issue ai on abd.issue_id = ai.issue_id LEFT JOIN agile_project_info api ON
        api.project_id =
        ai.project_id LEFT JOIN agile_issue ai2 on ai.parent_issue_id = ai2.issue_id LEFT JOIN agile_project_info api2
        ON api2.project_id =
        ai2.project_id
    </select>

    <select id="queryRemoveIssueDuringSprint" resultType="io.choerodon.agile.infra.dataobject.ReportIssueDTO">
        SELECT
        adl.issue_id,
        adl.creation_date AS date,
        'removeDuringSprint' as type,
        1 as old_value,
        0 as new_value,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id,
        case when
        (
        SELECT
        CASE
        WHEN
        adl2.issue_id IS NOT NULL
        AND adl2.new_value IS NULL THEN
        1 ELSE 0
        END
        FROM
        agile_data_log adl2
        WHERE
        adl2.issue_id = adl.issue_id
        AND adl2.creation_date &lt; adl.creation_date
        AND adl2.field = 'resolution'
        AND adl2.project_id = #{sprintDTO.projectId}
        ORDER BY
        adl2.creation_date DESC
        LIMIT 1
        ) is null then 1
        else
        (
        SELECT
        CASE
        WHEN
        adl2.issue_id IS NOT NULL
        AND adl2.new_value IS NULL THEN
        1 ELSE 0
        END
        FROM
        agile_data_log adl2
        WHERE
        adl2.issue_id = adl.issue_id
        AND adl2.creation_date &lt; adl.creation_date
        AND adl2.field = 'resolution'
        AND adl2.project_id = #{sprintDTO.projectId}
        ORDER BY
        adl2.creation_date DESC
        LIMIT 1
        ) end
        AS statistical
        FROM
        agile_data_log adl left join agile_issue ai on adl.issue_id = ai.issue_id LEFT JOIN agile_project_info api ON
        api.project_id = ai.project_id left join agile_issue ai2 on ai.parent_issue_id = ai2.issue_id LEFT JOIN
        agile_project_info api2 ON
        api2.project_id = ai2.project_id
        WHERE
        adl.field = 'Sprint'
        AND adl.project_id = #{sprintDTO.projectId}
        AND adl.creation_date &gt; #{sprintDTO.startDate}
        AND adl.creation_date &lt; #{sprintDTO.actualEndDate}
        AND adl.old_value REGEXP
        '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$'
        AND adl.issue_id IN
        <foreach collection="issueIdRemoveList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryAddDoneIssueIdsDuringSprint" resultType="java.lang.Long">
        SELECT distinct adl.issue_id
        FROM
        agile_data_log adl
        WHERE
        adl.project_id = #{sprintDTO.projectId}
        AND adl.field = 'resolution'
        AND adl.creation_date &gt; #{sprintDTO.startDate}
        AND adl.creation_date &lt; #{sprintDTO.actualEndDate}
        AND adl.new_value != ''
        AND
        adl.issue_id in
        <foreach collection="issueAllList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryRemoveDoneIssueIdsDuringSprint" resultType="java.lang.Long">
        SELECT distinct adl.issue_id
        FROM
        agile_data_log adl
        WHERE
        adl.project_id = #{sprintDTO.projectId}
        and adl.field = 'resolution'
        AND adl.creation_date &gt; #{sprintDTO.startDate}
        AND adl.creation_date &lt; #{sprintDTO.actualEndDate}
        AND adl.new_value is NULL
        and adl.issue_id in
        <foreach collection="issueAllList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryAddIssueDoneValueDuringSprint" resultType="io.choerodon.agile.infra.dataobject.ReportIssueDTO">
        SELECT
        a.*,
        0 as new_value,
        'addDoneDuringSprint' as type,
        case when
        (select adl3.new_value from agile_data_log adl3 where adl3.issue_id = a.issue_id and adl3.field = 'Sprint' and
        adl3.creation_date &lt; a.date order by adl3.log_id desc limit 1) REGEXP '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$'
        then 1 else 0 end as statistical,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_Id
        FROM
        (
        SELECT
        adl.issue_id,
        adl.creation_date as date,
        IFNULL((select adl2.new_string from agile_data_log adl2 where adl2.field = #{field} and adl2.issue_id =
        adl.issue_id AND adl2.project_id = #{sprintDTO.projectId} and adl2.creation_date &lt; adl.creation_date order by adl2.creation_date desc limit 1) ,0)as
        old_value
        FROM
        agile_data_log adl
        WHERE
        adl.project_id = #{sprintDTO.projectId} and
        adl.field = 'resolution' AND adl.creation_date &gt; #{sprintDTO.startDate}
        AND adl.creation_date &lt; #{sprintDTO.actualEndDate}
        AND adl.new_value IS not null
        AND adl.issue_id = #{issueId}
        )a LEFT JOIN agile_issue ai on ai.issue_id = a.issue_id LEFT JOIN agile_project_info api ON
        api.project_id =
        ai.project_id LEFT JOIN agile_issue ai2 on ai.parent_issue_id = ai2.issue_id LEFT JOIN agile_project_info api2
        ON api2.project_id = ai2.project_id
    </select>

    <select id="queryRemoveIssueDoneValueDurationSprint" resultType="io.choerodon.agile.infra.dataobject.ReportIssueDTO">
        SELECT
        a.*,
        0 as old_value,
        'removeDoneDuringSprint' as type,
        case when
        (select adl3.new_value from agile_data_log adl3 where adl3.issue_id = a.issue_id and adl3.field = 'Sprint'
        AND adl3.project_id = #{sprintDTO.projectId} and
        adl3.creation_date &lt; a.date order by adl3.log_id desc limit 1) REGEXP '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$'
        then 1 else 0 end as statistical,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id
        FROM
        (
        select
        adl.issue_id,
        adl.creation_date as date,
        IFNULL((select adl2.new_string from agile_data_log adl2 where adl2.field = #{field} and adl2.issue_id =
        adl.issue_id AND adl2.project_id = #{sprintDTO.projectId} and adl2.creation_date &lt; adl.creation_date order by adl2.creation_date desc limit 1) ,0)as
        new_value
        FROM
        agile_data_log adl
        WHERE
        adl.project_id = #{sprintDTO.projectId}
        AND adl.issue_id =#{issueId}
        and adl.field = 'resolution'
        AND adl.creation_date &gt; #{sprintDTO.startDate}
         AND adl.new_value IS null
        AND adl.creation_date &lt; #{sprintDTO.actualEndDate}
        ) a
        LEFT JOIN agile_issue ai on ai.issue_id = a.issue_id LEFT JOIN agile_project_info api ON api.project_id =
        ai.project_id LEFT JOIN agile_issue ai2 on ai.parent_issue_id = ai2.issue_id LEFT JOIN agile_project_info api2
        ON api2.project_id =
        ai2.project_id

    </select>

    <select id="queryDoneIssueIdsBeforeSprintStart" resultType="java.lang.Long">
        SELECT adl2.issue_id
        FROM
        agile_data_log adl2 where adl2.project_id = #{sprintDTO.projectId} and adl2.field = 'resolution'
        AND adl2.new_value is not null and adl2.issue_id IN
        <foreach collection="issueIdList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        and adl2.log_id in (
        SELECT
        MAX(adl.log_id) as log_id
        FROM
        agile_data_log adl
        WHERE
        adl.project_id = #{sprintDTO.projectId}
        AND adl.field = 'resolution'
        AND adl.creation_date &lt; #{sprintDTO.startDate}
        AND adl.issue_id IN
        <foreach collection="issueIdList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        GROUP BY
        adl.issue_id
        )
    </select>

    <select id="queryAddIssueDoneDetailDuringSprint" resultType="io.choerodon.agile.infra.dataobject.ReportIssueDTO">
        SELECT
        adl.issue_id,
        adl.creation_date AS date,
        'addDoneDuringSprint' as type,
        1 as old_value,
        0 as new_value,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id,
        case when
        (select adl3.new_value from agile_data_log adl3 where adl3.issue_id = adl.issue_id and adl3.field = 'Sprint'
        AND adl3.project_id = #{sprintDTO.projectId} and
        adl3.creation_date &lt; adl.creation_date order by adl3.log_id desc limit 1) REGEXP
        '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$'
        then 1 else 0 end as statistical
        FROM
        agile_data_log adl left join agile_issue ai on adl.issue_id = ai.issue_id LEFT JOIN agile_project_info api ON
        api.project_id = ai.project_id left join agile_issue ai2 on ai.parent_issue_id = ai2.issue_id LEFT JOIN
        agile_project_info api2 ON
        api2.project_id = ai2.project_id
        WHERE
        adl.field = 'resolution'
        AND adl.project_id = #{sprintDTO.projectId}
        AND adl.creation_date &gt; #{sprintDTO.startDate}
        AND adl.creation_date &lt;= #{sprintDTO.actualEndDate}
        AND adl.old_value is NULL
        AND adl.issue_id IN
        <foreach collection="issueIdAddDoneList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryRemoveIssueDoneDetailDurationSprint"
            resultType="io.choerodon.agile.infra.dataobject.ReportIssueDTO">
        SELECT
        adl.issue_id,
        adl.creation_date AS date,
        'removeDoneDuringSprint' as type,
        0 as old_value,
        1 as new_value,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id,
        case when
        (select adl3.new_value from agile_data_log adl3 where adl3.issue_id = adl.issue_id and adl3.field = 'Sprint'
        AND adl3.project_id = #{sprintDTO.projectId} and adl3.creation_date &lt; adl.creation_date order by adl3.log_id desc limit 1)
        REGEXP '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$'
        then 1 else 0
        end as statistical
        FROM
        agile_data_log adl
        LEFT JOIN agile_issue ai on adl.issue_id = ai.issue_id
        LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
        LEFT JOIN agile_issue ai2 on ai.parent_issue_id = ai2.issue_id
        LEFT JOIN agile_project_info api2 ON api2.project_id = ai2.project_id
        WHERE
        adl.field = 'resolution'
        AND adl.project_id = #{sprintDTO.projectId}
        AND adl.creation_date &gt;= #{sprintDTO.startDate}
        AND adl.creation_date &lt;= #{sprintDTO.actualEndDate}
        and adl.new_value is NULL
        AND adl.issue_id IN
        <foreach collection="issueIdRemoveDoneList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueChangeValueDurationSprint"
            resultType="io.choerodon.agile.infra.dataobject.ReportIssueDTO">
        SELECT
        adl.issue_id,
        adl.creation_date AS date,
        ifnull(adl.old_string,0) as old_value,
        ifnull(adl.new_string,0) as new_value,
        'valueChange' AS type,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id,
        1 as statistical
        FROM
        agile_data_log adl left join agile_issue ai on adl.issue_id = ai.issue_id LEFT JOIN agile_project_info api ON
        api.project_id = ai.project_id left join agile_issue ai2 on ai.parent_issue_id = ai2.issue_id LEFT JOIN
        agile_project_info api2 ON
        api2.project_id = ai2.project_id
        WHERE adl.field = #{field}
        AND adl.project_id = #{sprintDTO.projectId}
        AND adl.creation_date &gt; #{sprintDTO.startDate}
        AND adl.creation_date &lt; #{sprintDTO.actualEndDate}
        AND adl.issue_id IN
        <foreach collection="issueAllList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryAddIssueBeforeDuringSprint"
            resultType="io.choerodon.agile.infra.dataobject.ReportIssueDTO">
        SELECT
        ai.issue_id,
        #{sprintDTO.startDate} AS date,
        'startSprint' as type,
        0 as old_value,
        1 as new_value,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id AS parent_issue_id,
        1 as statistical
        FROM agile_issue ai LEFT JOIN agile_project_info api ON api.project_id = ai.project_id LEFT JOIN agile_issue ai2
        on ai.parent_issue_id = ai2.issue_id
        LEFT JOIN agile_project_info api2 ON api2.project_id = ai2.project_id
        WHERE ai.issue_id IN
        <foreach collection="issueIdList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueCountAfterSprint"
            resultType="io.choerodon.agile.infra.dataobject.ReportIssueDTO">
        SELECT
            c.*,
            CONCAT_WS('-', api.project_code, ai.issue_num)   AS issue_num,
            CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
            ai2.issue_id                                     AS parent_issue_id,
            'endSprint'                                      AS type
        FROM
            (
                SELECT
                    aspr.issue_id,
                    IF
                    (cc.new_value IS NULL, 1, 0) AS statistical,
                    IF
                    (cc.new_value IS NULL, 0, 1) AS old_value,
                    IF
                    (cc.new_value IS NULL, 1, 0) AS new_value,
                    #{sprintDTO.actualEndDate}    AS date
                FROM
                    agile_issue_sprint_rel aspr
                    LEFT JOIN (
                                  SELECT
                                      adl4.issue_id,
                                      adl4.new_value
                                  FROM agile_data_log adl4
                                  WHERE adl4.log_id IN
                                        (SELECT MAX(adl.log_id) AS log_id
                                         FROM agile_data_log adl
                                         WHERE adl.field = 'resolution'
                                         AND adl.project_id = #{sprintDTO.projectId}
                                         AND adl.creation_date &lt; #{sprintDTO.actualEndDate}
                                         GROUP BY issue_id)
                              ) cc ON aspr.issue_id = cc.issue_id
                WHERE
                    aspr.sprint_id = #{sprintDTO.sprintId}
            ) c
            LEFT JOIN agile_issue ai ON c.issue_id = ai.issue_id
            LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
            LEFT JOIN agile_issue ai2 ON ai.parent_issue_id = ai2.issue_id
            LEFT JOIN agile_project_info api2 ON api2.project_id = ai2.project_id
    </select>

    <select id="queryIssueValueAfterSprint"
            resultType="io.choerodon.agile.infra.dataobject.ReportIssueDTO">
        SELECT
            c.*,
            CONCAT_WS('-', api.project_code, ai.issue_num)   AS issue_num,
            CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
            ai2.issue_id                                     AS parent_issue_id,
            'endSprint'                                      AS type,
            IF
            (d.new_value IS NULL, 1, 0)                      AS statistical
        FROM
            (
                SELECT
                    aspr.issue_id,
                    IFNULL(cc.new_string, 0)  AS new_value,
                    0                         AS old_value,
                    #{sprintDTO.actualEndDate} AS date
                FROM
                    (select issue_id,project_id from agile_issue_sprint_rel where project_id = #{sprintDTO.projectId} and sprint_id = #{sprintDTO.sprintId} ) aspr
                    LEFT JOIN (SELECT
                                   adl5.issue_id,
                                   adl5.new_string
                               FROM agile_data_log adl5
                               WHERE adl5.project_id = #{sprintDTO.projectId}
			                        and adl5.field = #{field} and adl5.log_id IN (SELECT MAX(adl.log_id) AS log_id
                                                     FROM agile_data_log adl
                                                     WHERE adl.project_id = #{sprintDTO.projectId}
			                                               and adl.field = #{field}
                                                           AND adl.creation_date &lt; #{sprintDTO.actualEndDate}
                                                     GROUP BY
                                                         adl.issue_id)) cc ON aspr.issue_id = cc.issue_id

            ) c
            LEFT JOIN (
                          SELECT
                              aspr1.issue_id,
                              cdc.new_value
                          FROM
                             ( SELECT issue_id, project_id FROM agile_issue_sprint_rel WHERE project_id = #{sprintDTO.projectId} AND sprint_id = #{sprintDTO.sprintId} ) aspr1
                              LEFT JOIN (SELECT
                                             adl7.new_value,
                                             adl7.issue_id
                                         FROM agile_data_log adl7
                                         WHERE adl7.project_id = #{sprintDTO.projectId}
	                                            AND adl7.field = 'resolution'
	                                             and adl7.log_id IN (SELECT MAX(adl1.log_id) AS log_id
                                                               FROM agile_data_log adl1
                                                               WHERE adl1.project_id = #{sprintDTO.projectId}
                                                                     and adl1.field = 'resolution'
                                                                     AND adl1.creation_date &lt; #{sprintDTO.actualEndDate}
                                                                     and adl1.issue_id in(SELECT issue_id FROM agile_issue_sprint_rel WHERE project_id = #{sprintDTO.projectId} AND sprint_id = #{sprintDTO.sprintId} )
                                                               GROUP BY
                                                                   adl1.issue_id)) cdc ON
                                                                                           cdc.issue_id = aspr1.issue_id
                      ) d ON c.issue_id = d.issue_id
            LEFT JOIN agile_issue ai ON c.issue_id = ai.issue_id
            LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
            LEFT JOIN agile_issue ai2 ON ai.parent_issue_id = ai2.issue_id
            LEFT JOIN agile_project_info api2 ON api2.project_id = ai2.project_id
    </select>

    <select id="queryReportIssueIds" resultType="java.lang.Long">
        SELECT
        ai.issue_id
        FROM
        agile_issue_sprint_rel aisr
        LEFT JOIN (
        SELECT
        adl.issue_id,
        adl.new_value
        FROM
        agile_data_log adl,
        (
        SELECT
        MAX( adl1.log_id ) AS log_id
        FROM
        agile_issue_sprint_rel aisr1,
        agile_data_log adl1
        WHERE
        aisr1.project_id = #{projectId}
        AND aisr1.sprint_id = #{sprintId}
        AND aisr1.issue_id = adl1.issue_id
        AND adl1.project_id = #{projectId}
        AND adl1.field = 'resolution'
        AND adl1.creation_date > #{startDate}
        <if test="actualEndDate != null">
            AND adl1.creation_date &lt; #{actualEndDate}
        </if>
        GROUP BY
        adl1.issue_id
        ) a
        WHERE
        adl.log_id = a.log_id
        ) adl2 ON adl2.issue_id = aisr.issue_id,
        agile_issue ai
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = #{sprintId}
        AND aisr.issue_id = ai.issue_id
        AND ai.type_code in ('story', 'task', 'bug')
        <if test="status">
            and adl2.new_value is not null
        </if>
        <if test="!status">
            and adl2.new_value is null
        </if>
    </select>

    <select id="queryIssueByIssueIds" resultType="io.choerodon.agile.infra.dataobject.IssueDTO">
        SELECT
        ai.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        ai.type_code,
        ai.issue_type_id,
        ai.status_id,
        ai.summary,
        ai.estimate_time,
        ai.remaining_time,
        ai.priority_id,
        ai.assignee_id, ai.project_id
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_issue_status ais on ai.status_id = ais.status_id and ai.project_id = ais.project_id
        WHERE ai.project_id = #{projectId} AND ais.id is not null
        AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueStoryPoints" resultType="io.choerodon.agile.infra.dataobject.SprintReportIssueStatusDO">
        SELECT adl.issue_id AS issue_id, adl.new_string AS story_points
        FROM agile_data_log adl, (
        SELECT MAX(log_id) AS log_id
        FROM agile_data_log
        WHERE project_id = #{projectId} AND field = 'Story Points'
        <if test="actualEndDate != null">
            AND creation_date &lt; #{actualEndDate}
        </if>
        AND issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        GROUP BY issue_id
        ) a
        WHERE adl.log_id = a.log_id
    </select>

    <select id="queryBeforeIssueStatus" resultType="io.choerodon.agile.infra.dataobject.SprintReportIssueStatusDO">
        SELECT adl.issue_id AS issue_id,
        adl.new_value as status_id
        FROM agile_data_log adl,
        (
        SELECT MAX(adl1.log_id) AS log_id
        FROM agile_data_log adl1, agile_issue_status ais1
        WHERE adl1.project_id = #{projectId} AND adl1.field = 'status'
        and ais1.project_id = #{projectId} AND ais1.status_id = adl1.new_value AND ais1.is_completed IS NOT NULL
        AND adl1.issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        AND adl1.creation_date > #{startDate}
        <if test="actualEndDate != null">
            AND adl1.creation_date &lt; #{actualEndDate}
        </if>
        GROUP BY adl1.issue_id
        ) a
        WHERE adl.log_id = a.log_id
    </select>

    <select id="queryAfterIssueStatus" resultType="io.choerodon.agile.infra.dataobject.SprintReportIssueStatusDO">
        SELECT adl.issue_id AS issue_id,
        adl.old_value as status_id
        FROM agile_data_log adl,
        (
        SELECT MIN(log_id) AS log_id
        FROM agile_data_log
        WHERE project_id = #{projectId} AND field = 'status'
        AND issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        <if test="actualEndDate != null">
            AND creation_date > #{actualEndDate}
        </if>
        GROUP BY issue_id
        ) a
        WHERE adl.log_id = a.log_id
    </select>

    <select id="checkIssueDoneStatus" resultType="java.lang.Boolean">
        SELECT CASE WHEN c.issue_id IS NOT NULL AND new_value IS NULL
            THEN 1
               ELSE 0 END
        FROM (SELECT
                  bbb.issue_id,
                  bbb.new_value
              FROM (SELECT
                        adl.new_value,
                        adl.issue_id
                    FROM
                        agile_data_log adl
                    WHERE
                        adl.issue_id = #{issueId}
                        AND adl.creation_date &lt; #{date}
                        AND adl.field = 'resolution'
                    ORDER BY adl.creation_date DESC
                    LIMIT 1) bbb) c
    </select>

    <select id="checkIssueRemove" resultType="java.lang.Boolean">
        SELECT CASE
               WHEN c.issue_id IS NOT NULL AND c.new_value REGEXP '^${sprintId},|,${sprintId},|^${sprintId}$|,${sprintId}$'
                   THEN 1
               ELSE 0 END
        FROM (SELECT
                  bbb.issue_id,
                  bbb.new_value
              FROM (SELECT
                        adl.new_value,
                        adl.issue_id
                    FROM
                        agile_data_log adl
                    WHERE
                        adl.issue_id = #{issueId}
                        AND adl.creation_date &lt;= #{date}
                        AND adl.field = 'Sprint'
                    ORDER BY adl.creation_date DESC
                    LIMIT 1) bbb) c
    </select>

    <select id="queryRemoveIssueIdsDuringSprint" resultType="java.lang.Long">
        SELECT DISTINCT adl2.issue_id
        FROM agile_data_log adl2
        WHERE
            adl2.project_id = #{sprintDTO.projectId} and  adl2.field = 'Sprint' AND adl2.creation_date &gt; #{sprintDTO.startDate} AND
            adl2.creation_date &lt;= #{sprintDTO.actualEndDate}
            AND adl2.old_value REGEXP '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$'
            AND (adl2.new_value is null or not (adl2.new_value REGEXP '^${sprintDTO.sprintId},|,${sprintDTO.sprintId},|^${sprintDTO.sprintId}$|,${sprintDTO.sprintId}$' ))
    </select>


    <select id="queryAllIssueIdsByFilter" resultType="java.lang.Long">
        select ai.issue_id from agile_issue ai LEFT JOIN agile_issue ai2 on ai.parent_issue_id = ai2.issue_id where
        ai.project_id = #{projectId}
        AND ai.apply_type = 'agile' AND (ai2.apply_type = 'agile' or ai2.type_code is null)
        AND ai.type_code in ('story', 'task', 'bug', 'sub_task') AND (ai2.type_code in ('story', 'task', 'bug', 'sub_task') or ai2.type_code is null)
        <if test='filterSql != null'>
            AND ai.issue_id IN (${filterSql})
        </if>
    </select>

    <select id="queryAddIssueDuringDate" resultType="io.choerodon.agile.infra.dataobject.ColumnChangeDTO">
        SELECT
        abb.*,
        x.column_id AS column_to,
        0 AS column_from
        FROM
        (
        SELECT
        ai.issue_id,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num,
        ai.creation_date AS date,
        adl.old_value AS status_to
        FROM
        agile_issue ai
        LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
        LEFT JOIN (
            SELECT
            adl.issue_id,
            min( adl.log_id ) AS log_id
            FROM
            agile_data_log adl
            WHERE
            adl.project_id = #{projectId}
            AND adl.field = 'status'
            GROUP BY
            adl.issue_id
            ) minlog ON ai.issue_id = minlog.issue_id
        LEFT JOIN agile_data_log adl ON adl.log_id = minlog.log_id
        WHERE
        ai.project_id = #{projectId}
        AND ai.issue_id IN
        <foreach collection="allIssueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        AND ai.creation_date &gt;= #{startDate}
        AND ai.creation_date &lt;= #{endDate}
        ) abb
        LEFT JOIN (
            SELECT abcsr.column_id, abcsr.status_id
            FROM agile_board_column_status_rel abcsr
            WHERE abcsr.column_id IN
            <foreach collection="columnIds" item="columnId"
                     open="(" close=")" separator=",">
                #{columnId}
            </foreach>
            ) x ON x.status_id = abb.status_to
    </select>



    <select id="queryChangeIssueDuringDate" resultType="io.choerodon.agile.infra.dataobject.ColumnChangeDTO">
        SELECT
        adl.issue_id,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num,
        adl.new_value AS status_to,
        adl.new_value AS new_value,
        adl.old_value AS old_value,
        adl.creation_date AS date
        FROM
        agile_data_log adl
        LEFT JOIN agile_issue ai ON ai.issue_id = adl.issue_id
        LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
        WHERE
        adl.field = 'status'
        AND adl.project_id = #{projectId}
        AND adl.issue_id IN
        <foreach collection="allIssueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        AND adl.creation_date &gt;= #{startDate}
        AND adl.creation_date &lt;= #{endDate}
    </select>

    <select id="queryReportIssues" resultType="io.choerodon.agile.infra.dataobject.IssueDTO">
        SELECT
        ai.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        ai.issue_type_id,
        ai.status_id,
        ai.type_code,
        ai.summary,
        ai.priority_id,
        ai.assignee_id,
        ai.project_id,
        ai1.epic_name,
        ai.story_points,
        ai.remaining_time
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_issue ai1 ON ai.epic_id = ai1.issue_id
        , agile_version_issue_rel avir, agile_issue_status ais
        WHERE avir.project_id = #{projectId} AND avir.version_id = #{versionId}
        AND avir.issue_id = ai.issue_id AND ai.status_id = ais.status_id
        and ais.project_id = #{projectId}
        <choose>
            <when test='status == "done"'>
                AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story') AND ais.is_completed = TRUE
            </when>
            <when test='status == "unfinished" and type == "storyPoints"'>
                AND ais.is_completed = FALSE AND ((ai.type_code = 'story' AND ai.story_points IS NOT NULL)
                OR ai.type_code IN ('task', 'bug', 'issue_epic'))
            </when>
            <when test='status == "unfinished" and type == "remainingEstimatedTime"'>
                AND ais.is_completed = FALSE AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story')
                AND ai.remaining_time IS NOT NULL
            </when>
            <when test='status == "unfinished" and type == "issueCount"'>
                AND ais.is_completed = FALSE AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story')
            </when>
            <when test='status == "unfinishedUnestimated" and type == "storyPoints"'>
                AND ais.is_completed = FALSE AND ai.type_code = 'story'
                AND ai.story_points IS NULL
            </when>
            <when test='status == "unfinishedUnestimated" and type == "remainingEstimatedTime"'>
                AND ais.is_completed = FALSE AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story')
                AND ai.remaining_time IS NULL
            </when>
            <otherwise>
                AND FALSE
            </otherwise>
        </choose>
    </select>

    <select id="queryChangeIssue" resultMap="versionIssue">
        SELECT
            adl.creation_date AS change_date,
            a.issue_id        AS add_issue_id,
            b.issue_id        AS remove_issue_id,
            NULL              AS issue_id,
            adl.log_id        AS log_id
        FROM agile_data_log adl
            LEFT JOIN (SELECT
                           creation_date,
                           issue_id
                       FROM agile_data_log
                       WHERE project_id = #{projectId}
                             AND field = 'Fix Version'
                             AND creation_date >= #{startDate}
                             AND creation_date &lt;= #{endDate}
                             AND new_value = #{versionId}
                      ) a ON a.creation_date = adl.creation_date
            LEFT JOIN (SELECT
                           creation_date,
                           issue_id
                       FROM agile_data_log
                       WHERE project_id = #{projectId}
                             AND field = 'Fix Version'
                             AND creation_date >= #{startDate}
                             AND creation_date &lt;= #{endDate}
                             AND old_value = #{versionId}
                      ) b ON b.creation_date = adl.creation_date
            ,
            agile_issue ai
        WHERE adl.project_id = #{projectId}
              AND adl.issue_id = ai.issue_id
              AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story')
              AND adl.field = 'Fix Version'
              AND adl.creation_date >= #{startDate}
              AND adl.creation_date &lt;= #{endDate}
              AND (adl.new_value = #{versionId} OR adl.old_value = #{versionId})
        ORDER BY adl.creation_date DESC
    </select>

    <select id="queryIssueIdByVersionId" resultType="java.lang.Long">
        SELECT ai.issue_id
        FROM agile_version_issue_rel avir, agile_issue ai
        WHERE avir.project_id = #{projectId} AND avir.version_id = #{versionId} AND avir.relation_type = 'fix'
              AND ai.issue_id = avir.issue_id AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story')
    </select>

    <select id="queryChangeFieldIssue" resultType="io.choerodon.agile.infra.dataobject.IssueChangeDO">
        SELECT adl.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        adl.old_string AS old_value, adl.new_string AS new_value,
        adl.creation_date AS change_date, IFNULL(adl.new_string, 0) - IFNULL(adl.old_string, 0) AS change_field,
        ai.type_code AS type_code, IFNULL(b.completed, FALSE) AS completed
        FROM agile_data_log adl
        LEFT JOIN agile_issue ai ON ai.issue_id = adl.issue_id
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN (
        SELECT adl1.issue_id, ais.is_completed AS completed,
        a.change_date AS change_date
        FROM agile_data_log adl1
        LEFT JOIN agile_issue_status ais ON ais.status_id = adl1.new_value and ais.project_id = #{projectId},
        (
        <foreach collection="versionIssues" item="versionIssue"
                 open="" close="" separator=" UNION ALL  ">
            SELECT MAX(log_id) AS log_id, '${versionIssue.changeDate}' AS change_date
            FROM agile_data_log
            WHERE project_id = #{projectId} AND field = 'resolution'
            AND creation_date &lt;= #{versionIssue.changeDate}
            AND issue_id IN
            <foreach collection="versionIssue.issueIds" item="issueId"
                     open="(" close=")" separator=",">
                #{issueId}
            </foreach>
            GROUP BY issue_id
        </foreach>
        )a
        WHERE adl1.log_id = a.log_id
        ) b ON b.change_date = adl.creation_date AND b.issue_id= adl.issue_id
        WHERE adl.project_id = #{projectId} AND adl.field = #{field}
        AND (
        <foreach collection="versionIssues" item="versionIssue"
                 open="(" close=")" separator=" OR ">
            ( adl.creation_date &lt; #{versionIssue.changeDate} AND adl.creation_date >= #{versionIssue.preDate}
            AND adl.issue_id IN
            <foreach collection="versionIssue.issueIds" item="issueId"
                     open="(" close=")" separator=",">
                #{issueId}
            </foreach>
            )
        </foreach>
        )
    </select>

    <select id="queryCompletedChangeIssue" resultMap="versionIssue">
        SELECT adl.issue_id, adl.creation_date AS change_date,
        NULL AS add_issue_id, NULL AS remove_issue_id,
        adl.log_id AS log_id
        FROM agile_data_log adl
        LEFT JOIN agile_issue_status ais ON
        <if test="completed == true">
            ais.status_id = adl.new_value
        </if>
        <if test="completed == false">
            ais.status_id = adl.old_value
        </if>
        and ais.project_id = #{projectId}
        WHERE adl.project_id = #{projectId} AND adl.field = 'resolution'
        AND ais.is_completed = TRUE
        AND (
        <foreach collection="versionIssues" item="versionIssue"
                 open="(" close=")" separator=" OR ">
            ( adl.creation_date &lt; #{versionIssue.changeDate} AND adl.creation_date >= #{versionIssue.preDate}
            AND adl.issue_id IN
            <foreach collection="versionIssue.issueIds" item="issueId"
                     open="(" close=")" separator=",">
                #{issueId}
            </foreach>
            )
        </foreach>
        )
    </select>

    <select id="queryChangIssue" resultType="io.choerodon.agile.infra.dataobject.IssueChangeDO">
        SELECT adl.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        b.old_value AS old_value, b.new_value AS new_value,
        adl.creation_date AS change_date, ai.type_code AS type_code,
        IFNULL(b1.completed, FALSE) AS completed
        FROM agile_data_log adl
        LEFT JOIN agile_issue ai ON ai.issue_id = adl.issue_id
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN (
        SELECT adl1.issue_id, adl1.old_string AS old_value,
        adl1.new_string AS new_value, a.change_date AS change_date
        FROM agile_data_log adl1,
        (
        <foreach collection="changeIssues" item="changeIssue"
                 open="" close="" separator=" UNION ALL  ">
            SELECT MAX(log_id) AS log_id, #{changeIssue.changeDate} AS change_date
            FROM agile_data_log
            WHERE project_id = #{projectId} AND field = #{field}
            AND creation_date &lt;= #{changeIssue.changeDate}
            AND issue_id IN
            <foreach collection="changeIssue.issueIds" item="issueId"
                     open="(" close=")" separator=",">
                #{issueId}
            </foreach>
            GROUP BY issue_id
        </foreach>
        )a
        WHERE adl1.log_id = a.log_id
        ) b ON b.change_date = adl.creation_date AND b.issue_id= adl.issue_id
        LEFT JOIN (
        SELECT adl1.issue_id, ais.is_completed AS completed,
        a.change_date AS change_date
        FROM agile_data_log adl1
        LEFT JOIN agile_issue_status ais ON ais.status_id = adl1.new_value and ais.project_id = #{projectId},
        (
        <foreach collection="changeIssues" item="changeIssue"
                 open="" close="" separator=" UNION ALL  ">
            SELECT MAX(log_id) AS log_id, #{changeIssue.changeDate} AS change_date
            FROM agile_data_log
            WHERE project_id = #{projectId} AND field = 'resolution'
            AND creation_date &lt;= #{changeIssue.changeDate}
            AND issue_id IN
            <foreach collection="changeIssue.issueIds" item="issueId"
                     open="(" close=")" separator=",">
                #{issueId}
            </foreach>
            GROUP BY issue_id
        </foreach>
        )a
        WHERE adl1.log_id = a.log_id
        ) b1 ON b1.change_date = adl.creation_date AND b1.issue_id= adl.issue_id
        WHERE adl.project_id = #{projectId}
        AND (
        <foreach collection="changeIssues" item="changeIssue"
                 open="(" close=")" separator=" OR ">
            ( adl.creation_date = #{changeIssue.changeDate}
            AND adl.log_id IN
            <foreach collection="changeIssue.logIds" item="logId"
                     open="(" close=")" separator=",">
                #{logId}
            </foreach>
            AND adl.issue_id IN
            <foreach collection="changeIssue.issueIds" item="issueId"
                     open="(" close=")" separator=",">
                #{issueId}
            </foreach>
            )
        </foreach>
        )
    </select>

    <select id="queryTotalField" resultType="java.lang.Integer">
        SELECT IFNULL(SUM(${field}),0)
        FROM agile_issue
        WHERE project_id = #{projectId}
        <if test='field == "story_points"'>
            AND type_code = 'story'
        </if>
        <if test='field == "remaining_time"'>
            AND type_code IN ('task', 'bug', 'issue_epic', 'story')
        </if>
        AND issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryCompleteField" resultType="java.lang.Integer">
        SELECT IFNULL(SUM(ai.${field}),0)
        FROM agile_issue ai
        LEFT JOIN agile_issue_status ais ON ais.status_id = ai.status_id and ais.project_id = #{projectId}
        WHERE ai.project_id = #{projectId} AND ais.is_completed = TRUE
        <if test='field == "story_points"'>
            AND ai.type_code = 'story'
        </if>
        <if test='field == "remaining_time"'>
            AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story')
        </if>
        AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryUnEstimateCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM agile_issue ai
        LEFT JOIN agile_issue_status ais ON ais.status_id = ai.status_id and ais.project_id = #{projectId}
        WHERE ai.project_id = #{projectId} AND ais.is_completed = FALSE
        <if test='field == "story_points"'>
            AND ai.type_code = 'story' AND ai.story_points IS NULL
        </if>
        <if test='field == "remaining_time"'>
            AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story') AND ai.remaining_time IS NULL
        </if>
        AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryCompletedIssueCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM agile_issue ai
        LEFT JOIN agile_issue_status ais ON ais.status_id = ai.status_id and ais.project_id = #{projectId}
        WHERE ai.project_id = #{projectId} AND ais.is_completed = TRUE
        AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story') AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>


    <select id="selectByIssueCountCommitted" resultType="io.choerodon.agile.infra.dataobject.VelocitySingleDO">
        SELECT
            aisr.sprint_id,
            aisr.issue_id
        FROM
          agile_issue_sprint_rel aisr, agile_issue ai
        WHERE aisr.project_id = #{projectId} and aisr.issue_id = ai.issue_id and ai.apply_type = 'agile'
    </select>

    <select id="selectByIssueCountCompleted" resultType="io.choerodon.agile.infra.dataobject.VelocitySingleDO">
        SELECT
            aisr.sprint_id,
            aisr.issue_id
        FROM
        agile_issue_sprint_rel aisr,
        (
            SELECT
                t2.sprint_id,
                t2.issue_id,
                IF(adl2.new_value IS NULL,0 ,1) AS completed
            FROM
            agile_data_log adl2,
            (
                SELECT
                    aisr.sprint_id,
                    aisr.issue_id,
                    max(adl1.log_id) AS log_id
                FROM
                    agile_issue_sprint_rel aisr,
                    agile_sprint asp,
                    agile_data_log adl1
                WHERE
                    aisr.project_id = #{projectId}
                    AND aisr.sprint_id = asp.sprint_id
                    AND adl1.project_id = #{projectId}
                    AND aisr.issue_id = adl1.issue_id
                    AND adl1.field = 'resolution'
                    AND adl1.last_update_date &lt;= IF (asp.actual_end_date IS NULL, #{now}, asp.actual_end_date)
                GROUP BY aisr.sprint_id, aisr.issue_id
        ) t2
        WHERE
            adl2.project_id = #{projectId}
            AND adl2.log_id = t2.log_id
        ) t3,
        agile_issue ai
        WHERE
            aisr.project_id = #{projectId}
            AND aisr.sprint_id = t3.sprint_id
            AND aisr.issue_id = t3.issue_id
            AND t3.completed = 1
            and aisr.issue_id = ai.issue_id and ai.apply_type = 'agile'
    </select>


    <select id="selectByStoryPointAndNumCommitted" resultType="io.choerodon.agile.infra.dataobject.VelocitySingleDO">
        SELECT
        t1.sprint_id,
        t1.issue_id,
        IFNULL(adl.new_string,0) AS story_point
        FROM
        agile_data_log adl,
        (
        SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'Story Points'
        AND adl1.last_update_date &lt;= IF (asp.actual_end_date IS NULL, #{now}, asp.actual_end_date)
        GROUP BY aisr.sprint_id, aisr.issue_id
        ) t1,
        agile_issue ai
        WHERE
        adl.project_id = #{projectId}
        AND adl.log_id = t1.log_id
        AND t1.sprint_id IN
        <foreach collection="ids" item="id"
                 open="(" close=")" separator=",">
            #{id}
        </foreach>
        and t1.issue_id = ai.issue_id and ai.apply_type = 'agile'
    </select>

    <select id="selectByStoryPointAndNumCompleted" resultType="io.choerodon.agile.infra.dataobject.VelocitySingleDO">
        SELECT
        t1.sprint_id,
        t1.issue_id,
        IFNULL(adl.new_string,0) AS story_point
        FROM
        agile_data_log adl,
        (
        SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'Story Points'
        AND adl1.last_update_date &lt;= IF (asp.actual_end_date IS NULL, #{now}, asp.actual_end_date)
        GROUP BY aisr.sprint_id, aisr.issue_id
        ) t1,
        (
        SELECT
        t2.sprint_id,
        t2.issue_id,
        IF(adl2.new_value IS NULL,0 ,1) AS completed
        FROM
        agile_data_log adl2,
        (
        SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'resolution'
        AND adl1.last_update_date &lt;= IF (asp.actual_end_date IS NULL, #{now}, asp.actual_end_date)
        GROUP BY aisr.sprint_id, aisr.issue_id
        ) t2
        WHERE
        adl2.project_id = #{projectId}
        AND adl2.log_id = t2.log_id
        ) t3,
        agile_issue ai
        WHERE
        adl.project_id = #{projectId}
        AND adl.log_id = t1.log_id
        AND t1.sprint_id = t3.sprint_id
        AND adl.issue_id = t3.issue_id
        AND t3.completed = 1
        AND t1.sprint_id IN
        <foreach collection="ids" item="id"
                 open="(" close=")" separator=",">
            #{id}
        </foreach>
        and t1.issue_id = ai.issue_id and ai.apply_type = 'agile'
    </select>


    <select id="selectByRemainTimeCommitted" resultType="io.choerodon.agile.infra.dataobject.VelocitySingleDO">
        SELECT
        t1.sprint_id,
        t1.issue_id,
        IFNULL(adl.new_value + IFNULL(t5.work_times,0), 0) AS remain_time
        FROM
        agile_data_log adl,
        (
        SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'timeestimate'
        AND adl1.last_update_date &lt;= IF(asp.actual_end_date IS NULL,#{now}, asp.actual_end_date)
        GROUP BY
        aisr.sprint_id,
        aisr.issue_id
        ) t1
        LEFT JOIN (
        SELECT t4.sprint_id,t4.issue_id,SUM(adlf.new_value + 0) AS work_times FROM agile_data_log adlf,
        (SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'timespent'
        AND adl1.last_update_date &lt;= IF (asp.actual_end_date IS NULL, #{now}, asp.actual_end_date)
        GROUP BY aisr.sprint_id, aisr.issue_id) t4 WHERE adlf.project_id = #{projectId} AND adlf.log_id = t4.log_id
        GROUP BY t4.sprint_id,t4.issue_id
        ) t5 ON t1.sprint_id = t5.sprint_id AND t1.issue_id = t5.issue_id,
        agile_issue ai
        WHERE
        adl.project_id = #{projectId}
        AND adl.log_id = t1.log_id
        AND t1.sprint_id IN
        <foreach collection="ids" item="id"
                 open="(" close=")" separator=",">
            #{id}
        </foreach>
        and t1.issue_id = ai.issue_id and ai.apply_type = 'agile'
    </select>

    <select id="selectByRemainTimeCompleted" resultType="io.choerodon.agile.infra.dataobject.VelocitySingleDO">
        SELECT
        t1.sprint_id,
        t1.issue_id,
        IFNULL(adl.new_value + IFNULL(t5.work_times,0), 0) AS remain_time
        FROM
        agile_data_log adl,
        (
        SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'timeestimate'
        AND adl1.last_update_date &lt;= IF(asp.actual_end_date IS NULL,#{now}, asp.actual_end_date)
        GROUP BY
        aisr.sprint_id,
        aisr.issue_id
        ) t1
        LEFT JOIN (
        SELECT t4.sprint_id,t4.issue_id,SUM(adlf.new_value + 0) AS work_times FROM agile_data_log adlf,
        (SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'timespent'
        AND adl1.last_update_date &lt;= IF (asp.actual_end_date IS NULL, #{now}, asp.actual_end_date)
        GROUP BY aisr.sprint_id, aisr.issue_id) t4 WHERE adlf.project_id = #{projectId} AND adlf.log_id = t4.log_id
        GROUP BY t4.sprint_id,t4.issue_id
        ) t5 ON t1.sprint_id = t5.sprint_id AND t1.issue_id = t5.issue_id,
        (
        SELECT
        t2.sprint_id,
        t2.issue_id,
        IF (adl2.new_value IS NULL, 0, 1) AS completed
        FROM
        agile_data_log adl2,
        (
        SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'resolution'
        AND adl1.last_update_date &lt;=IF (asp.actual_end_date IS NULL, #{now},asp.actual_end_date)
        GROUP BY
        aisr.sprint_id,
        aisr.issue_id
        ) t2
        WHERE
        adl2.project_id = #{projectId}
        AND adl2.log_id = t2.log_id
        ) t3,
        agile_issue ai
        WHERE
        adl.project_id = #{projectId}
        AND adl.log_id = t1.log_id
        AND t1.sprint_id = t3.sprint_id
        AND adl.issue_id = t3.issue_id
        AND t3.completed = 1
        AND t1.sprint_id IN
        <foreach collection="ids" item="id"
                 open="(" close=")" separator=",">
            #{id}
        </foreach>
        and t1.issue_id = ai.issue_id and ai.apply_type = 'agile'
    </select>


    <select id="selectAllSprint" resultType="io.choerodon.agile.infra.dataobject.VelocitySprintDO">
        SELECT
            sprint_id,
            sprint_name
        FROM
            agile_sprint
        WHERE
            project_id = #{projectId} and status_code in ('started','closed')
        ORDER BY sprint_id DESC
    </select>


    <select id="queryPieChartByParam" resultType="io.choerodon.agile.infra.dataobject.PieChartDO">
        select *,(pieData.value/#{total})*100 as percent from (
        SELECT
        <choose>
            <when test="own">
                ai.${fieldName} AS type_name,
            </when>
            <otherwise>
                <if test="fieldName == 'resolution'">
                    other.is_completed AS type_name,
                    ( CASE other.is_completed
                    WHEN 0 THEN '未解决'
                    WHEN 1 THEN '解决'
                    ELSE NULL
                    END) AS name,
                </if>
                <if test="fieldName == 'component_id' or fieldName == 'version_id'">
                    other.${fieldName} AS type_name,
                    otherName.name as name,
                </if>
                <if test="fieldName == 'sprint_id'">
                    other.${fieldName} AS type_name,
                    otherName.sprint_name as name,
                </if>
                <if test="fieldName == 'label_id'">
                    other.${fieldName} AS type_name,
                    otherName.label_name as name,
                </if>
            </otherwise>
        </choose>
        count( * ) AS value
        FROM
        agile_issue ai
        <if test="!own">
            <if test="fieldName == 'resolution'">
                LEFT JOIN agile_issue_status other on ai.status_id = other.status_id and other.project_id =
                ai.project_id
            </if>
            <if test="fieldName == 'component_id'">
                LEFT JOIN agile_component_issue_rel other on ai.issue_id = other.issue_id
                LEFT JOIN agile_issue_component otherName on other.${fieldName} = otherName.${fieldName}
            </if>
            <if test="fieldName == 'version_id'">
                LEFT JOIN agile_version_issue_rel other on ai.issue_id = other.issue_id and other.relation_type = 'fix'
                LEFT JOIN agile_product_version otherName on other.${fieldName} = otherName.${fieldName}
            </if>
            <if test="fieldName == 'sprint_id'">
                LEFT JOIN agile_issue_sprint_rel other on ai.issue_id = other.issue_id
                LEFT JOIN agile_sprint otherName on other.${fieldName} = otherName.${fieldName}
            </if>
            <if test="fieldName == 'label_id'">
                LEFT JOIN agile_label_issue_rel other on ai.issue_id = other.issue_id
                LEFT JOIN agile_issue_label otherName on other.${fieldName} = otherName.${fieldName}
            </if>
        </if>
        WHERE
        ai.project_id = #{projectId}
        AND ai.apply_type = 'agile'
        <if test="startDate != null and endDate!= null">
            and ai.creation_date &gt;= #{startDate} and ai.creation_date &lt;= #{endDate}
        </if>
        <if test="sprintId != null">
            and ai.issue_id in (select aisr.issue_id from agile_issue_sprint_rel aisr where aisr.sprint_id =
            #{sprintId})
        </if>
        <if test="versionId != null">
            and ai.issue_id in (select avir.issue_id from agile_version_issue_rel avir where avir.version_id =
            #{versionId} and avir.relation_type = 'fix')
        </if>
        GROUP BY
        <choose>
            <when test="own">
                ai.${fieldName}
            </when>
            <otherwise>
                <choose>
                    <when test="fieldName == 'resolution'">
                        other.is_completed
                    </when>
                    <otherwise>
                        other.${fieldName}
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
        )pieData ORDER BY pieData.value DESC
    </select>

    <select id="queryPieChartByEpic" resultType="io.choerodon.agile.infra.dataobject.PieChartDO">
        select *,(pieData.value/#{total})*100 as percent from (
        SELECT
        IFNULL( epica.epic_id, 0 ) AS type_name,
        count(*) as value,
        ai2.epic_name AS NAME
        FROM
        (
        SELECT
        ai.issue_id,
        ai.epic_id,
        ai.creation_date
        FROM
        agile_issue ai
        WHERE
        ai.project_id = #{projectId}
        AND ai.apply_type = 'agile'
        AND ai.type_code in ('story', 'task', 'bug')
        UNION
        SELECT
        ai4.issue_id,
        ai5.epic_id,
        ai4.creation_date
        FROM
        agile_issue ai4
        LEFT JOIN agile_issue ai5 ON ai5.issue_id = ai4.parent_issue_id
        WHERE
        ai4.project_id = #{projectId}
        and ai4.type_code = 'sub_task'
        AND ai5.apply_type = 'agile'
        ) epica
        LEFT JOIN agile_issue ai2 ON ai2.issue_id = epica.epic_id
        WHERE
        1=1
        <if test="startDate != null and endDate!= null">
            and epica.creation_date &gt;= #{startDate} and epica.creation_date &lt;= #{endDate}
        </if>
        <if test="sprintId != null">
            and epica.issue_id in (select aisr.issue_id from agile_issue_sprint_rel aisr where aisr.sprint_id =
            #{sprintId})
        </if>
        <if test="versionId != null">
            and epica.issue_id in (select avir.issue_id from agile_version_issue_rel avir where avir.version_id =
            #{versionId}
            and avir.relation_type = 'fix')
        </if>
        GROUP BY type_name,name
        )pieData ORDER BY pieData.value DESC
    </select>

    <select id="queryIssueCountByFieldName" resultType="java.lang.Integer">
        SELECT count(ai.issue_id)
        FROM
        agile_issue ai
        <if test="fieldName == 'component_id'">
            LEFT JOIN agile_component_issue_rel other on ai.issue_id = other.issue_id
        </if>
        <if test="fieldName == 'version_id'">
            LEFT JOIN agile_version_issue_rel other on ai.issue_id = other.issue_id and other.relation_type = 'fix'
        </if>
        <if test="fieldName == 'sprint_id'">
            LEFT JOIN agile_issue_sprint_rel other on ai.issue_id = other.issue_id
        </if>
        <if test="fieldName == 'label_id'">
            LEFT JOIN agile_label_issue_rel other on ai.issue_id = other.issue_id
        </if>
        WHERE
        ai.project_id = #{projectId}
        AND ai.apply_type = 'agile'
        <if test="fieldName == 'epic_id'">
            AND ai.type_code != 'issue_epic'
        </if>
        <if test="startDate != null and endDate!= null">
            and ai.creation_date &gt;= #{startDate} and ai.creation_date &lt;= #{endDate}
        </if>
        <if test="sprintId != null">
            and ai.issue_id in (select aisr.issue_id from agile_issue_sprint_rel aisr where aisr.sprint_id =
            #{sprintId})
        </if>
        <if test="versionId != null">
            and ai.issue_id in (select avir.issue_id from agile_version_issue_rel avir where avir.version_id =
            #{versionId} and avir.relation_type = 'fix')
        </if>
    </select>

    <select id="selectEpicIssueList" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartListDTO">
        SELECT
            ai.issue_id,
            CONCAT_WS(
                '-',
                api.project_code,
                ai.issue_num
            ) AS issue_num,
            ai.summary,
            ai.issue_type_id,
            ai.priority_id,
            ai.status_id,
            ai.story_points,
            ai.remaining_time + IFNULL(aw.work_times,0) AS remain_time,
            IF (t.new_value IS NULL, 0, 1) AS completed
        FROM
            agile_issue ai
        LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
        LEFT JOIN (
            SELECT
                awl.issue_id,
                SUM(awl.work_time) AS work_times
            FROM
                agile_work_log awl
            WHERE project_id = #{projectId}
            GROUP BY
                awl.issue_id
        ) aw ON aw.issue_id = ai.issue_id
        LEFT JOIN (
            SELECT
                issue_id,
                new_value
            FROM
                agile_data_log
            WHERE
                log_id IN (
                    SELECT
                        MAX(adl1.log_id) AS log_id
                    FROM
                        agile_data_log adl1
                    WHERE
                        adl1.field = 'resolution'
                    AND adl1.project_id = #{projectId}
                    GROUP BY adl1.issue_id
                )
        ) t ON ai.issue_id = t.issue_id
        WHERE
            ai.project_id = #{projectId}
        AND ai.epic_id = #{epicId}
        AND ai.apply_type = 'agile'
    </select>

    <select id="selectVersionIssueList" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartListDTO">
        SELECT
            ai.issue_id,
            CONCAT_WS(
            '-',
            api.project_code,
            ai.issue_num
            ) AS issue_num,
            ai.summary,
            ai.issue_type_id,
            ai.priority_code,
            ai.status_id,
            ai.story_points,
            ai.priority_id,
            ai.remaining_time + IFNULL(aw.work_times,0) AS remain_time,
            IF (t.new_value IS NULL, 0, 1) AS completed
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
        LEFT JOIN (
            SELECT
                awl.issue_id,
                SUM(awl.work_time) AS work_times
            FROM
                agile_work_log awl
            WHERE project_id = #{projectId}
            GROUP BY
                awl.issue_id
        ) aw ON aw.issue_id = ai.issue_id
        LEFT JOIN (
            SELECT
                issue_id,
                new_value
            FROM
               agile_data_log
            WHERE
            log_id IN (
                SELECT
                   MAX(adl1.log_id) AS log_id
                FROM
                   agile_data_log adl1
                WHERE
                    adl1.field = 'resolution'
                    AND adl1.project_id = #{projectId}
                GROUP BY adl1.issue_id
            )
        ) t ON ai.issue_id = t.issue_id,
        (select DISTINCT avir2.issue_id,avir2.version_id from
	      agile_version_issue_rel avir2 )avir
        WHERE
            ai.project_id = #{projectId}
            AND avir.version_id = #{versionId}
            AND avir.issue_id = ai.issue_id
            AND ai.apply_type = 'agile'
    </select>

    <select id="selectByStoryPointCompletedFinal" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDTO">
        SELECT
        t11.group_day AS group_day,
        IFNULL(SUM(t11.story_points + 0), 0) AS completed_story_points
        FROM
        (
        SELECT
        t2.group_day,
        t2.issue_id,
        adl2.new_string AS story_points
        FROM
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT aviri.issue_id FROM agile_version_issue_rel aviri, agile_issue aii WHERE aviri.version_id = #{id}
            and aviri.issue_id = aii.issue_id and aii.apply_type = 'agile'
        </if>
        )
        <if test="chartType == 'epic_chart'">
            AND field IN ('resolution','Story Points', 'Epic Link')
        </if>
        <if test="chartType == 'version_chart'">
            AND field IN ('resolution','Story Points','Fix Version')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirw.issue_id FROM agile_version_issue_rel avirw, agile_issue aiw WHERE avirw.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirw.last_update_date, '%Y-%m-%d' )
            and avirw.issue_id = aiw.issue_id and aiw.apply_type = 'agile'
        </if>
        )
        AND adl.field = 'Story Points'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2,
        agile_data_log adl2
        WHERE
        t2.log_id = adl2.log_id
        ) t11,
        (
        SELECT
        t10.group_day,
        t10.issue_id
        FROM
        agile_data_log adl9,
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirp.issue_id FROM agile_version_issue_rel avirp, agile_issue aip WHERE avirp.version_id = #{id}
            and avirp.issue_id = aip.issue_id and aip.apply_type = 'agile'
        </if>
        )
        <if test="chartType == 'epic_chart'">
            AND field IN ('resolution','Story Points', 'Epic Link')
        </if>
        <if test="chartType == 'version_chart'">
            AND field IN ('resolution','Story Points','Fix Version')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirh.issue_id FROM agile_version_issue_rel avirh, agile_issue aih WHERE avirh.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirh.last_update_date, '%Y-%m-%d' )
            and avirh.issue_id = aih.issue_id and aih.apply_type = 'agile'
        </if>
        )
        AND adl.field = 'resolution'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t10
        WHERE
        adl9.log_id = t10.log_id
        AND adl9.new_value IS NOT NULL
        ) t12
        WHERE
        t11.group_day = t12.group_day
        AND t11.issue_id = t12.issue_id
        GROUP BY
        t11.group_day
    </select>

    <select id="selectByStoryPointAllFinal" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDTO">
        SELECT
        t2.group_day AS group_day,
        IFNULL(SUM(adl2.new_string + 0), 0) AS all_story_points
        FROM
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        project_id = #{projectId}
        AND issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirm.issue_id FROM agile_version_issue_rel avirm, agile_issue aim WHERE avirm.version_id = #{id}
            and avirm.issue_id = aim.issue_id and aim.apply_type = 'agile'
        </if>
        )
        <if test="chartType == 'epic_chart'">
            AND field IN ('resolution','Story Points', 'Epic Link')
        </if>
        <if test="chartType == 'version_chart'">
            AND field IN ('resolution','Story Points','Fix Version')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirh.issue_id FROM agile_version_issue_rel avirh, agile_issue aih WHERE avirh.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirh.last_update_date, '%Y-%m-%d' )
            and avirh.issue_id = aih.issue_id and aih.apply_type = 'agile'
        </if>
        )
        AND adl.field = 'Story Points'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2,
        agile_data_log adl2
        WHERE
        t2.log_id = adl2.log_id
        GROUP BY
        t2.group_day
    </select>

    <select id="selectByStoryPointCountAll" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDTO">
        SELECT
        t2.group_day,
        COUNT(adl3.issue_id) AS issue_count
        FROM
        agile_data_log adl3,
        (
        SELECT
        t1.group_day AS group_day,
        adl.issue_id AS issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        project_id = #{projectId}
        AND issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirm.issue_id FROM agile_version_issue_rel avirm, agile_issue aim WHERE avirm.version_id = #{id}
            and avirm.issue_id = aim.issue_id and aim.apply_type = 'agile'
        </if>
        )
        <if test="chartType == 'epic_chart'">
            AND field IN ('resolution','Story Points', 'Epic Link')
        </if>
        <if test="chartType == 'version_chart'">
            AND field IN ('resolution','Story Points','Fix Version')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            AND adl.field = 'Epic Link'
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            AND adl.field = 'Fix Version' and (adl.old_value = #{id} OR adl.new_value = #{id})
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirh.issue_id FROM agile_version_issue_rel avirh, agile_issue aih WHERE avirh.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirh.last_update_date, '%Y-%m-%d' )
            and avirh.issue_id = aih.issue_id and aih.apply_type = 'agile'
        </if>
        )
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2
        WHERE
        adl3.log_id = t2.log_id
        AND adl3.new_value = #{id}
        GROUP BY t2.group_day
    </select>

    <select id="selectByStoryPointCountEstimate" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDTO">
        SELECT
        t3.group_day AS group_day,
        COUNT(adl.issue_id) AS un_estimate_issue_count
        FROM
        agile_data_log adl,
        (
        SELECT
        t1.group_day AS group_day,
        adl.issue_id AS issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        project_id = #{projectId}
        AND issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirm.issue_id FROM agile_version_issue_rel avirm, agile_issue aim WHERE avirm.version_id = #{id}
            and avirm.issue_id = aim.issue_id and aim.apply_type = 'agile'
        </if>
        )
        <if test="chartType == 'epic_chart'">
            AND field IN ('resolution','Story Points', 'Epic Link')
        </if>
        <if test="chartType == 'version_chart'">
            AND field IN ('resolution','Story Points','Fix Version')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.field = 'Story Points'
        <if test="chartType == 'epic_chart'">
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirh.issue_id FROM agile_version_issue_rel avirh, agile_issue aih WHERE avirh.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirh.last_update_date, '%Y-%m-%d' )
            and avirh.issue_id = aih.issue_id and aih.apply_type = 'agile'
        </if>
        )
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t3
        WHERE
        adl.log_id = t3.log_id
        AND adl.new_string IS NOT NULL
        GROUP BY
        t3.group_day
    </select>

    <select id="selectByRemainTimeRemainCompleted" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDTO">
        SELECT
        t11.group_day AS group_day,
        IFNULL(SUM(t11.remain_time + 0), 0) AS completed_remain_times
        FROM
        (
        SELECT
        t2.group_day,
        t2.issue_id,
        adl2.new_string AS remain_time
        FROM
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        project_id = #{projectId}
        AND issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT aviro.issue_id FROM agile_version_issue_rel aviro, agile_issue aio WHERE aviro.version_id = #{id}
            and aviro.issue_id = aio.issue_id and aio.apply_type = 'agile'
        </if>
        )
        <if test="chartType == 'epic_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Epic Link')
        </if>
        <if test="chartType == 'version_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Fix Version')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirw.issue_id FROM agile_version_issue_rel avirw, agile_issue aiw WHERE avirw.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirw.last_update_date, '%Y-%m-%d' )
            and avirw.issue_id = aiw.issue_id and aiw.apply_type = 'agile'

        </if>
        )
        AND adl.field = 'timeestimate'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2,
        agile_data_log adl2
        WHERE
        t2.log_id = adl2.log_id
        ) t11,
        (
        SELECT
        t10.group_day,
        t10.issue_id
        FROM
        agile_data_log adl9,
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        project_id = #{projectId}
        AND issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirp.issue_id FROM agile_version_issue_rel avirp, agile_issue aip WHERE avirp.version_id = #{id}
            and avirp.issue_id = aip.issue_id and aip.apply_type = 'agile'
        </if>
        )
        <if test="chartType == 'epic_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Epic Link')
        </if>
        <if test="chartType == 'version_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Fix Version')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirh.issue_id FROM agile_version_issue_rel avirh, agile_issue aih WHERE avirh.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirh.last_update_date, '%Y-%m-%d' )
            and avirh.issue_id = aih.issue_id and aih.apply_type = 'agile'
        </if>
        )
        AND adl.field = 'resolution'
        AND adl.project_id = #{projectId}
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t10
        WHERE
        adl9.log_id = t10.log_id
        AND adl9.new_value IS NOT NULL
        ) t12
        WHERE
        t11.group_day = t12.group_day
        AND t11.issue_id = t12.issue_id
        GROUP BY
        t11.group_day
    </select>

    <select id="selectByRemainTimeWorkLogCompleted" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDTO">
        SELECT
        t11.group_day AS group_day,
        IFNULL(SUM(t11.work_time + 0), 0) AS completed_remain_times
        FROM
        (
        SELECT
        t2.group_day,
        t2.issue_id,
        adl2.new_string AS work_time
        FROM
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        project_id = #{projectId}
        AND issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avire.issue_id FROM agile_version_issue_rel avire, agile_issue aie WHERE avire.version_id = #{id}
            and avire.issue_id = aie.issue_id and aie.apply_type = 'agile'
        </if>
        )
        <if test="chartType == 'epic_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Epic Link')
        </if>
        <if test="chartType == 'version_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Fix Version')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirw.issue_id FROM agile_version_issue_rel avirw, agile_issue aiw WHERE avirw.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirw.last_update_date, '%Y-%m-%d' )
            and avirw.issue_id = aiw.issue_id and aiw.apply_type = 'agile'
        </if>
        )
        AND adl.field = 'timespent'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2,
        agile_data_log adl2
        WHERE
        t2.log_id = adl2.log_id
        ) t11,
        (
        SELECT
        t10.group_day,
        t10.issue_id
        FROM
        agile_data_log adl9,
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        project_id = #{projectId}
        AND issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirm.issue_id FROM agile_version_issue_rel avirm,agile_issue aim WHERE avirm.version_id = #{id}
            and avirm.issue_id = aim.issue_id and aim.apply_type = 'agile'
        </if>
        )
        <if test="chartType == 'epic_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Epic Link')
        </if>
        <if test="chartType == 'version_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Fix Version')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirh.issue_id FROM agile_version_issue_rel avirh, agile_issue aih WHERE avirh.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirh.last_update_date, '%Y-%m-%d' )
            and avirh.issue_id = aih.issue_id and aih.apply_type = 'agile'
        </if>
        )
        AND adl.field = 'resolution'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t10
        WHERE
        adl9.log_id = t10.log_id
        AND adl9.new_value IS NOT NULL
        ) t12
        WHERE
        t11.group_day = t12.group_day
        AND t11.issue_id = t12.issue_id
        GROUP BY
        t11.group_day
    </select>

    <select id="selectByRemainTimeRemainAll" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDTO">
        SELECT
        t2.group_day AS group_day,
        IFNULL(SUM(adl2.new_string + 0), 0) AS all_remain_times
        FROM
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        project_id = #{projectId}
        AND issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirm.issue_id FROM agile_version_issue_rel avirm, agile_issue aim WHERE avirm.version_id = #{id}
            and avirm.issue_id = aim.issue_id and aim.apply_type = 'agile'
        </if>
        )
        <if test="chartType == 'epic_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Epic Link')
        </if>
        <if test="chartType == 'version_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Fix Version')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirh.issue_id FROM agile_version_issue_rel avirh, agile_issue aih WHERE avirh.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirh.last_update_date, '%Y-%m-%d' )
            and avirh.issue_id = aih.issue_id and aih.apply_type = 'agile'
        </if>
        )
        AND adl.field = 'timeestimate'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2,
        agile_data_log adl2
        WHERE
        t2.log_id = adl2.log_id
        GROUP BY
        t2.group_day
    </select>

    <select id="selectByRemainTimeWorkLogAll" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDTO">
        SELECT
        t2.group_day AS group_day,
        IFNULL(SUM(adl2.new_string + 0), 0) AS all_remain_times
        FROM
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        project_id = #{projectId}
        AND issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirp.issue_id FROM agile_version_issue_rel avirp, agile_issue aip WHERE avirp.version_id = #{id}
            and avirp.issue_id = aip.issue_id and aip.apply_type = 'agile'
        </if>
        )
        <if test="chartType == 'epic_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Epic Link')
        </if>
        <if test="chartType == 'version_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Fix Version')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirh.issue_id FROM agile_version_issue_rel avirh, agile_issue aih WHERE avirh.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirh.last_update_date, '%Y-%m-%d' )
            and avirh.issue_id = aih.issue_id and aih.apply_type = 'agile'
        </if>
        )
        AND adl.field = 'timespent'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2,
        agile_data_log adl2
        WHERE
        t2.log_id = adl2.log_id
        GROUP BY
        t2.group_day
    </select>

    <select id="selectByRemainTimeCountAll" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDTO">
        SELECT
        t2.group_day,
        COUNT(adl3.issue_id) AS issue_count
        FROM
        agile_data_log adl3,
        (
        SELECT
        t1.group_day AS group_day,
        adl.issue_id AS issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        project_id = #{projectId}
        AND issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirm.issue_id FROM agile_version_issue_rel avirm, agile_issue aim WHERE avirm.version_id = #{id}
            and avirm.issue_id = aim.issue_id and aim.apply_type = 'agile'
        </if>
        )
        <if test="chartType == 'epic_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Epic Link')
        </if>
        <if test="chartType == 'version_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Fix Version')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            AND adl.field = 'Epic Link'
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            AND adl.field = 'Fix Version' and (adl.old_value = #{id} OR adl.new_value = #{id})
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirh.issue_id FROM agile_version_issue_rel avirh, agile_issue aih WHERE avirh.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirh.last_update_date, '%Y-%m-%d' )
            and avirh.issue_id = aih.issue_id and aih.apply_type = 'agile'
        </if>
        )
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2
        WHERE
        adl3.log_id = t2.log_id
        AND adl3.new_value = #{id}
        GROUP BY
        t2.group_day
    </select>

    <select id="selectByRemainTimeCountEstimate" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDTO">
        SELECT
        t3.group_day,
        COUNT(adl.issue_id) AS un_estimate_issue_count
        FROM
        agile_data_log adl,
        (
        SELECT
        t1.group_day AS group_day,
        adl.issue_id AS issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        project_id = #{projectId}
        AND issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirp.issue_id FROM agile_version_issue_rel avirp, agile_issue aip WHERE avirp.version_id = #{id}
            and avirp.issue_id = aip.issue_id and aip.apply_type = 'agile'
        </if>
        )
        <if test="chartType == 'epic_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Epic Link')
        </if>
        <if test="chartType == 'version_chart'">
            AND field IN ('resolution', 'timeestimate', 'timespent', 'Fix Version')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.project_id = #{projectId}
        AND adl.field = 'timeestimate'
        <if test="chartType == 'epic_chart'">
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirh.issue_id FROM agile_version_issue_rel avirh, agile_issue aih WHERE avirh.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirh.last_update_date, '%Y-%m-%d' )
            and avirh.issue_id = aih.issue_id and aih.apply_type = 'agile'
        </if>
        )
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t3
        WHERE
        adl.log_id = t3.log_id
        AND adl.new_string IS NOT NULL
        GROUP BY
        t3.group_day
    </select>

    <select id="selectByIssueCountCompletedFinal" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDTO">
        SELECT
        t2.group_day,
        COUNT(adl3.issue_id) AS issue_completed_count
        FROM
        agile_data_log adl3,
        (
        SELECT
        t1.group_day AS group_day,
        adl.issue_id AS issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        project_id = #{projectId}
        AND issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT aviro.issue_id FROM agile_version_issue_rel aviro, agile_issue aio WHERE aviro.version_id = #{id}
            and aviro.issue_id = aio.issue_id and aio.apply_type = 'agile'
        </if>
        )
        AND field IN
        <if test="chartType == 'epic_chart'">
            ('Epic Link', 'resolution')
        </if>
        <if test="chartType == 'version_chart'">
            ('Fix Version', 'resolution')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.project_id = #{projectId}
        <if test="chartType == 'epic_chart'">
            AND adl.field = 'Epic Link'
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            AND adl.field = 'Fix Version' and (adl.old_value = #{id} OR adl.new_value = #{id})
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirr.issue_id FROM agile_version_issue_rel avirr, agile_issue air WHERE avirr.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirr.last_update_date, '%Y-%m-%d' )
            and avirr.issue_id = air.issue_id and air.apply_type = 'agile'
        </if>
        )
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2,
        (
        SELECT
        t10.group_day,
        t10.issue_id
        FROM
        agile_data_log adl9,
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        project_id = #{projectId}
        AND issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirp.issue_id FROM agile_version_issue_rel avirp, agile_issue aip WHERE avirp.version_id = #{id}
            and avirp.issue_id = aip.issue_id and aip.apply_type = 'agile'
        </if>
        )
        AND field IN
        <if test="chartType == 'epic_chart'">
            ('Epic Link', 'resolution')
        </if>
        <if test="chartType == 'version_chart'">
            ('Fix Version', 'resolution')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.project_id = #{projectId}
        <if test="chartType == 'epic_chart'">
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirh.issue_id FROM agile_version_issue_rel avirh, agile_issue aih WHERE avirh.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirh.last_update_date, '%Y-%m-%d' )
            and avirh.issue_id = aih.issue_id and aih.apply_type = 'agile'
        </if>
        )
        AND adl.field = 'resolution'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t10
        WHERE
        adl9.log_id = t10.log_id
        AND adl9.new_value IS NOT NULL
        ) t12
        WHERE
        adl3.log_id = t2.log_id
        AND t12.group_day = t2.group_day AND t12.issue_id = t2.issue_id
        AND adl3.new_value = #{id}
        GROUP BY
        t2.group_day
    </select>

    <select id="selectByIssueCountAllFinal" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDTO">
        SELECT
        t2.group_day,
        COUNT(adl3.issue_id) AS issue_count
        FROM
        agile_data_log adl3,
        (
        SELECT
        t1.group_day AS group_day,
        adl.issue_id AS issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        project_id = #{projectId}
        AND issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirh.issue_id FROM agile_version_issue_rel avirh, agile_issue ai WHERE avirh.version_id = #{id}
            and avirh.issue_id = ai.issue_id and ai.apply_type = 'agile'
        </if>
        )
        AND field IN
        <if test="chartType == 'epic_chart'">
            ('Epic Link', 'resolution')
        </if>
        <if test="chartType == 'version_chart'">
            ('Fix Version', 'resolution')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            AND adl.field = 'Epic Link'
            and (SELECT new_value FROM agile_data_log WHERE project_id = #{projectId} and t1.group_day >= DATE_FORMAT( last_update_date, '%Y-%m-%d' )
            AND field = 'Epic Link' AND issue_id = adl.issue_id order BY log_id desc limit 1) = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            AND adl.field = 'Fix Version' and (adl.old_value = #{id} OR adl.new_value = #{id})
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id} and apply_type = 'agile'
        </if>
        <if test="chartType == 'version_chart'">
            SELECT avirp.issue_id FROM agile_version_issue_rel avirp, agile_issue aip WHERE avirp.version_id = #{id} and
            t1.group_day >= DATE_FORMAT( avirp.last_update_date, '%Y-%m-%d' )
            and avirp.issue_id = aip.issue_id and aip.apply_type = 'agile'
        </if>
        )
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2
        WHERE
        adl3.log_id = t2.log_id
        AND adl3.new_value = #{id}
        GROUP BY
        t2.group_day
    </select>

    <select id="queryIssueTypeDistributionChart"
            resultType="io.choerodon.agile.infra.dataobject.IssueTypeDistributionChartDO">
       SELECT
            ai.issue_type_id,
            ai.status_id,
            count( * ) AS count
        FROM
            agile_issue ai
            LEFT JOIN agile_issue ai2 ON ai.parent_issue_id = ai2.issue_id
        WHERE
            ai.project_id = #{projectId}
             AND ai.apply_type = 'agile'
            AND ( ai2.apply_type = 'agile' OR ai2.type_code IS NULL )
        GROUP BY
            ai.issue_type_id,
            ai.status_id
    </select>

    <select id="queryVersionProgressChart"
            resultType="io.choerodon.agile.infra.dataobject.IssueTypeDistributionChartDO">
       SELECT
            apv.name,
            ai.status_id,
            apv.sequence,
            count( * ) AS count
        FROM
            agile_version_issue_rel avir
             LEFT JOIN agile_issue ai ON avir.issue_id = ai.issue_id
            LEFT JOIN agile_issue ai2 ON ai.parent_issue_id = ai2.issue_id
            LEFT JOIN (
                SELECT
                    apv1.sequence,
                    apv1.NAME,
                    apv1.version_id
                FROM
                    agile_product_version apv1
                WHERE
                    apv1.project_id = #{projectId}
                ORDER BY
                    apv1.sequence desc LIMIT 5
                ) apv ON avir.version_id = apv.version_id
        WHERE
            avir.project_id = #{projectId}
            AND ai.apply_type = 'agile'
            AND ( ai2.apply_type = 'agile' OR ai2.type_code IS NULL )
            AND apv.NAME IS NOT NULL
        GROUP BY
            apv.NAME,
            ai.status_id,
            apv.sequence
        order by apv.sequence desc
    </select>

    <select id="queryIssuePriorityDistributionChart"
            resultType="io.choerodon.agile.infra.dataobject.IssuePriorityDistributionChartDO">
        SELECT
        aaa.priority_id,
        SUM( CASE WHEN aaa.is_completed = 1 THEN aaa.count ELSE 0 END ) AS done_count,
        SUM( aaa.count ) AS total_count
        FROM
        (
        SELECT
        ai.priority_id,
        ais.is_completed,
        count( * ) AS count
        FROM
        agile_issue ai
        LEFT JOIN agile_issue ai2 ON ai.parent_issue_id = ai2.issue_id
        LEFT JOIN agile_issue_status ais ON ai.status_id = ais.status_id and ais.project_id = ai.project_id
        WHERE
        ai.project_id = #{projectId}
        AND ai.apply_type = 'agile'
        AND ( ai2.apply_type = 'agile' OR ai2.type_code IS NULL )
        GROUP BY
        ai.priority_id,
        ais.is_completed
        ) aaa
        GROUP BY
        aaa.priority_id
        order by CASE aaa.priority_id
        <foreach collection="priorityIds" item="priorityId" index="index">
            when #{priorityId} then #{index}
        </foreach>
        end
    </select>

    <select id="queryFixCumulativeData" resultType="io.choerodon.agile.infra.dataobject.FixCumulativeData">
        SELECT
            adl.log_id,
            adl.issue_id,
            adl.old_value AS oldStatusId,
            adl.old_string as oldString,
            adl.new_value AS newStatusId,
            adl.new_string as oldString,
            adl.creation_date
        FROM
            agile_data_log adl
        WHERE
            adl.field = 'status'
            AND adl.issue_id = #{issueId}
            and adl.old_value is not null
            and adl.new_value is not null
        ORDER BY
            adl.creation_date ASC
    </select>

    <select id="queryIssueDOByFixCumulativeData" resultType="java.lang.Long">
        select a.issue_id from (
        SELECT
            issue_id
        FROM
            agile_data_log
        WHERE
            field = 'status'
            and issue_id is not null
            and new_value is not null
            and old_value is not null
        GROUP BY
            issue_id
        )a order by issue_id
    </select>

    <select id="queryRemoveIssueIds" resultType="java.lang.Long">
        select a.issue_id from (
        SELECT
            issue_id
        FROM
            agile_data_log
        WHERE
            field = 'status'
            and issue_id is not null
            and (new_value is null or
             old_value is null)
        GROUP BY
            issue_id
        )a order by a.issue_id
    </select>

    <select id="queryLastResolutionBeforeMoveOutSprint" resultType="io.choerodon.agile.infra.dataobject.ReportIssueDTO">
    SELECT
    a.*
    FROM agile_data_log a
    where a.field = 'resolution'
    and a.project_id = #{projectId}
    and a.issue_id = #{issueId}
    and a.creation_date &lt;= #{outDate}
    order by a.creation_date desc LIMIT 1
    </select>

</mapper>